//
// +-------------------------------------------------------------------------+
// |   This file has been generated by The Interactive Disassembler (IDA)    |
// |           Copyright (c) 2017 Hex-Rays, <support@hex-rays.com>           |
// |                      Licensed to: Freeware version                      |
// +-------------------------------------------------------------------------+
//
//
//      This file contains the user-defined type definitions.
//      To use it press F2 in IDA and enter the name of this file.
//

#define UNLOADED_FILE   1
#include <idc.idc>

static main(void)
{
  Enums();              // enumerations
  Structures();         // structure types
  ApplyStrucTInfos();
	set_inf_attr(INF_LOW_OFF, 0x10000);
	set_inf_attr(INF_HIGH_OFF, 0x7FFE1000);
}

static Enums_0(id) {

	id = add_enum(-1,"_MEDIA_TYPE",0x1100000);
	add_enum_member(id,"F5_1Pt2_512",	0X1,	-1);
	add_enum_member(id,"F3_1Pt44_512",	0X2,	-1);
	add_enum_member(id,"F3_2Pt88_512",	0X3,	-1);
	add_enum_member(id,"F3_20Pt8_512",	0X4,	-1);
	add_enum_member(id,"F3_720_512",	0X5,	-1);
	add_enum_member(id,"F5_360_512",	0X6,	-1);
	add_enum_member(id,"F5_320_512",	0X7,	-1);
	add_enum_member(id,"F5_320_1024",	0X8,	-1);
	add_enum_member(id,"F5_180_512",	0X9,	-1);
	add_enum_member(id,"F5_160_512",	0XA,	-1);
	add_enum_member(id,"RemovableMedia",	0XB,	-1);
	add_enum_member(id,"FixedMedia",	0XC,	-1);
	add_enum_member(id,"F3_120M_512",	0XD,	-1);
	add_enum_member(id,"F3_640_512",	0XE,	-1);
	add_enum_member(id,"F5_640_512",	0XF,	-1);
	add_enum_member(id,"F5_720_512",	0X10,	-1);
	add_enum_member(id,"F3_1Pt2_512",	0X11,	-1);
	add_enum_member(id,"F3_1Pt23_1024",	0X12,	-1);
	add_enum_member(id,"F5_1Pt23_1024",	0X13,	-1);
	add_enum_member(id,"F3_128Mb_512",	0X14,	-1);
	add_enum_member(id,"F3_230Mb_512",	0X15,	-1);
	add_enum_member(id,"F8_256_128",	0X16,	-1);
	id = add_enum(-1,"NPCEnums",0x1100000);
	set_enum_bf(id,1);
	add_enum_member(id,"inUse",	0X80,	0x80);
	id = add_enum(-1,"EffectNames",0x2200000);
	add_enum_member(id,"effectfountainDisk",	0X1,	-1);
	add_enum_member(id,"effectRisingDisc",	0X2,	-1);
	add_enum_member(id,"effectStar",	0X3,	-1);
	add_enum_member(id,"effectFireballImpact",	0X4,	-1);
	add_enum_member(id,"effectZzZ",	0X5,	-1);
	add_enum_member(id,"effectBoosterSmoke",	0X6,	-1);
	add_enum_member(id,"effectDrownedQuote",	0X7,	-1);
	add_enum_member(id,"effectExclamationMark",	0X8,	-1);
	add_enum_member(id,"effectLevelUpOrDown",	0X9,	-1);
	add_enum_member(id,"effectRedDamageRings",	0XA,	-1);
	add_enum_member(id,"effectBigExplosion",	0XB,	-1);
	add_enum_member(id,"effectHeadbumpSparks",	0XC,	-1);
	add_enum_member(id,"effectUnknownUnused",	0XD,	-1);
	add_enum_member(id,"effectSmallExplosionDisc",	0XE,	-1);
	add_enum_member(id,"effectNothing",	0XF,	-1);
	add_enum_member(id,"effectPushJumpKey",	0X10,	-1);
	id = add_enum(-1,"NPCNames",0x2200000);
	add_enum_member(id,"NPCnothing",	0,	-1);
	add_enum_member(id,"NPCWeaponEnergy",	0X1,	-1);
	add_enum_member(id,"NPCEnemyBehemoth",	0X2,	-1);
	add_enum_member(id,"NPCDeletesItself",	0X3,	-1);
	add_enum_member(id,"NPCSmoke",	0X4,	-1);
	add_enum_member(id,"NPCEnemyCritterHoppingGreen",	0X5,	-1);
	add_enum_member(id,"NPCEnemyBeetleHorizontalGreen",	0X6,	-1);
	add_enum_member(id,"NPCEnemyBasil",	0X7,	-1);
	add_enum_member(id,"NPCEnemyBeetleFollow1",	0X8,	-1);
	add_enum_member(id,"NPCBalrogDropIn",	0X9,	-1);
	add_enum_member(id,"NPCBossBalrogShooting",	0XA,	-1);
	add_enum_member(id,"NPCProjectileBalrogEnemyBounce",	0XB,	-1);
	add_enum_member(id,"NPCBalrogCutscene",	0XC,	-1);
	add_enum_member(id,"NPCForcefield",	0XD,	-1);
	add_enum_member(id,"NPCSantasKey",	0XE,	-1);
	add_enum_member(id,"NPCTreasureChestClosed",	0XF,	-1);
	id = add_enum(-1,"MACRO_TVGN",0x1100000);
	add_enum_member(id,"TVGN_ROOT",	0,	-1);
	add_enum_member(id,"TVGN_NEXT",	0X1,	-1);
	add_enum_member(id,"TVGN_PREVIOUS",	0X2,	-1);
	add_enum_member(id,"TVGN_PARENT",	0X3,	-1);
	add_enum_member(id,"TVGN_CHILD",	0X4,	-1);
	add_enum_member(id,"TVGN_FIRSTVISIBLE",	0X5,	-1);
	add_enum_member(id,"TVGN_NEXTVISIBLE",	0X6,	-1);
	add_enum_member(id,"TVGN_PREVIOUSVISIBLE",	0X7,	-1);
	add_enum_member(id,"TVGN_DROPHILITE",	0X8,	-1);
	add_enum_member(id,"TVGN_CARET",	0X9,	-1);
	add_enum_member(id,"TVGN_LASTVISIBLE",	0XA,	-1);
	id = add_enum(-1,"Lib_Enums",0x1100000);
	add_enum_member(id,"FLUSHALL",	0X1,	-1);
	add_enum_member(id,"__V6_HEAP",	0X3,	-1);
	add_enum_member(id,"inuse",	0X83,	-1);
	id = add_enum(-1,"Directions",0x1100000);
	add_enum_member(id,"left",	0,	-1);
	add_enum_member(id,"up",	0X1,	-1);
	add_enum_member(id,"right",	0X2,	-1);
	add_enum_member(id,"down",	0X3,	-1);
	id = add_enum(-1,"MACRO_EPERM",0x2220000);
	add_enum_member(id,"EPERM",	0X1,	-1);
	add_enum_member(id,"ENOENT",	0X2,	-1);
	add_enum_member(id,"ESRCH",	0X3,	-1);
	add_enum_member(id,"EINTR",	0X4,	-1);
	add_enum_member(id,"EIO",	0X5,	-1);
	add_enum_member(id,"ENXIO",	0X6,	-1);
	add_enum_member(id,"E2BIG",	0X7,	-1);
	add_enum_member(id,"ENOEXEC",	0X8,	-1);
	add_enum_member(id,"EBADF",	0X9,	-1);
	add_enum_member(id,"ECHILD",	0XA,	-1);
	add_enum_member(id,"EAGAIN",	0XB,	-1);
	add_enum_member(id,"ENOMEM",	0XC,	-1);
	add_enum_member(id,"EACCES",	0XD,	-1);
	add_enum_member(id,"EFAULT",	0XE,	-1);
	add_enum_member(id,"EBUSY",	0X10,	-1);
	add_enum_member(id,"EEXIST",	0X11,	-1);
	add_enum_member(id,"EXDEV",	0X12,	-1);
	add_enum_member(id,"ENODEV",	0X13,	-1);
	add_enum_member(id,"ENOTDIR",	0X14,	-1);
	add_enum_member(id,"EISDIR",	0X15,	-1);
	add_enum_member(id,"EINVAL",	0X16,	-1);
	add_enum_member(id,"ENFILE",	0X17,	-1);
	add_enum_member(id,"EMFILE",	0X18,	-1);
	add_enum_member(id,"ENOTTY",	0X19,	-1);
	add_enum_member(id,"EFBIG",	0X1B,	-1);
	add_enum_member(id,"ENOSPC",	0X1C,	-1);
	add_enum_member(id,"ESPIPE",	0X1D,	-1);
	add_enum_member(id,"EROFS",	0X1E,	-1);
	add_enum_member(id,"EMLINK",	0X1F,	-1);
	add_enum_member(id,"EPIPE",	0X20,	-1);
	add_enum_member(id,"EDOM",	0X21,	-1);
	add_enum_member(id,"ERANGE",	0X22,	-1);
	add_enum_member(id,"EDEADLK",	0X24,	-1);
	add_enum_member(id,"ENAMETOOLONG",	0X26,	-1);
	add_enum_member(id,"ENOLCK",	0X27,	-1);
	add_enum_member(id,"ENOSYS",	0X28,	-1);
	add_enum_member(id,"ENOTEMPTY",	0X29,	-1);
	add_enum_member(id,"EILSEQ",	0X2A,	-1);
	id = add_enum(-1,"MACRO__IOB",0x2220000);
	add_enum_member(id,"_IOB_ENTRIES",	0X14,	-1);
	add_enum_member(id,"EOF",	0XFFFFFFFF,	-1);
	id = add_enum(-1,"MACRO__IONBF",0x1100000);
	set_enum_bf(id,1);
	add_enum_member(id,"_IONBF",	0X4,	0x4);
	add_enum_member(id,"_IOMYBUF",	0X8,	0x8);
	add_enum_member(id,"_IOEOF",	0X10,	0x10);
	add_enum_member(id,"_IOERR",	0X20,	0x20);
	add_enum_member(id,"_IOSTRG",	0X40,	0x40);
	add_enum_member(id,"_IORW",	0X80,	0x80);
	id = add_enum(-1,"MACRO__SH",0x1100000);
	add_enum_member(id,"_SH_DENYRW",	0X10,	-1);
	add_enum_member(id,"_SH_DENYWR",	0X20,	-1);
	add_enum_member(id,"_SH_DENYRD",	0X30,	-1);
	id = add_enum(-1,"MACRO_INT",0x2220000);
	add_enum_member(id,"INT_MAX",	0X7FFFFFFF,	-1);
	add_enum_member(id,"UINT_MAX",	0XFFFFFFFF,	-1);
	id = add_enum(-1,"MACRO__HEAP",0x1100000);
	add_enum_member(id,"_HEAP_MAXREQ",	0XFFFFFFE0,	-1);
	add_enum_member(id,"_HEAPEMPTY",	0XFFFFFFFF,	-1);
	id = add_enum(-1,"MACRO_SEEK",0x2220000);
	add_enum_member(id,"SEEK_SET",	0,	-1);
	add_enum_member(id,"SEEK_CUR",	0X1,	-1);
	add_enum_member(id,"SEEK_END",	0X2,	-1);
	add_enum_member(id,"MMIO_DEFAULTBUFFER",	0X2000,	-1);
	id = add_enum(-1,"MACRO__OUT",0x2220000);
	add_enum_member(id,"_OUT_TO_DEFAULT",	0,	-1);
	add_enum_member(id,"_OUT_TO_STDERR",	0X1,	-1);
	add_enum_member(id,"_OUT_TO_MSGBOX",	0X2,	-1);
	add_enum_member(id,"_REPORT_ERRMODE",	0X3,	-1);
	id = add_enum(-1,"MACRO_FALSE",0x2220000);
	add_enum_member(id,"FALSE",	0,	-1);
	add_enum_member(id,"TRUE",	0X1,	-1);
	id = add_enum(-1,"MACRO_INVALID",0x2220000);
	set_enum_bf(id,1);
	add_enum_member(id,"INVALID_HANDLE_VALUE",	0XFFFFFFFF,	-1);
	id = add_enum(-1,"MACRO__IOREAD",0x1100000);
	set_enum_bf(id,1);
	add_enum_member(id,"_IOREAD",	0X1,	0x1);
	add_enum_member(id,"_IOWRT",	0X2,	0x2);
	id = add_enum(-1,"MACRO_CP_HWND",0x2220000);
	add_enum_member(id,"CP_HWND",	0,	-1);
	add_enum_member(id,"CP_OPEN",	0X1,	-1);
	add_enum_member(id,"CP_DIRECT",	0X2,	-1);
	add_enum_member(id,"CP_LEVEL",	0X3,	-1);
	add_enum_member(id,"VK_DBE_ALPHANUMERIC",	0XF0,	-1);
	add_enum_member(id,"VK_DBE_KATAKANA",	0XF1,	-1);
	add_enum_member(id,"VK_DBE_HIRAGANA",	0XF2,	-1);
	add_enum_member(id,"VK_DBE_SBCSCHAR",	0XF3,	-1);
	add_enum_member(id,"VK_DBE_DBCSCHAR",	0XF4,	-1);
	add_enum_member(id,"VK_DBE_ROMAN",	0XF5,	-1);
	add_enum_member(id,"VK_DBE_NOROMAN",	0XF6,	-1);
	add_enum_member(id,"VK_DBE_ENTERWORDREGISTERMODE",	0XF7,	-1);
	add_enum_member(id,"VK_DBE_ENTERIMECONFIGMODE",	0XF8,	-1);
	add_enum_member(id,"VK_DBE_FLUSHSTRING",	0XF9,	-1);
	add_enum_member(id,"VK_DBE_CODEINPUT",	0XFA,	-1);
	add_enum_member(id,"VK_DBE_NOCODEINPUT",	0XFB,	-1);
	add_enum_member(id,"VK_DBE_DETERMINESTRING",	0XFC,	-1);
	add_enum_member(id,"VK_DBE_ENTERDLGCONVERSIONMODE",	0XFD,	-1);
	id = add_enum(-1,"MACRO__O_SHORT",0x1100000);
	set_enum_bf(id,1);
	add_enum_member(id,"_O_RANDOM",	0X10,	0x10);
	add_enum_member(id,"_O_SEQUENTIAL",	0X20,	0x20);
	add_enum_member(id,"_O_SHORT_LIVED",	0X1000,	0x1000);
	id = add_enum(-1,"MACRO_WM",0x1100000);
	add_enum_member(id,"WM_NULL",	0,	-1);
	add_enum_member(id,"WM_CREATE",	0X1,	-1);
	add_enum_member(id,"WM_DESTROY",	0X2,	-1);
	add_enum_member(id,"WM_MOVE",	0X3,	-1);
	add_enum_member(id,"WM_SIZEWAIT",	0X4,	-1);
	add_enum_member(id,"WM_SIZE",	0X5,	-1);
	add_enum_member(id,"WM_ACTIVATE",	0X6,	-1);
	add_enum_member(id,"WM_SETFOCUS",	0X7,	-1);
	add_enum_member(id,"WM_KILLFOCUS",	0X8,	-1);
	add_enum_member(id,"WM_SETVISIBLE",	0X9,	-1);
	add_enum_member(id,"WM_ENABLE",	0XA,	-1);
	add_enum_member(id,"WM_SETREDRAW",	0XB,	-1);
	add_enum_member(id,"WM_SETTEXT",	0XC,	-1);
	add_enum_member(id,"WM_GETTEXT",	0XD,	-1);
	add_enum_member(id,"WM_GETTEXTLENGTH",	0XE,	-1);
	add_enum_member(id,"WM_PAINT",	0XF,	-1);
	add_enum_member(id,"WM_CLOSE",	0X10,	-1);
	add_enum_member(id,"WM_QUERYENDSESSION",	0X11,	-1);
	add_enum_member(id,"WM_QUIT",	0X12,	-1);
	add_enum_member(id,"WM_QUERYOPEN",	0X13,	-1);
	add_enum_member(id,"WM_ERASEBKGND",	0X14,	-1);
	add_enum_member(id,"WM_SYSCOLORCHANGE",	0X15,	-1);
	add_enum_member(id,"WM_ENDSESSION",	0X16,	-1);
	add_enum_member(id,"WM_SYSTEMERROR",	0X17,	-1);
	add_enum_member(id,"WM_SHOWWINDOW",	0X18,	-1);
	add_enum_member(id,"WM_CTLCOLOR",	0X19,	-1);
	add_enum_member(id,"WM_WININICHANGE",	0X1A,	-1);
	add_enum_member(id,"WM_SETTINGCHANGE",	0X1A,	-1);
	add_enum_member(id,"WM_DEVMODECHANGE",	0X1B,	-1);
	add_enum_member(id,"WM_ACTIVATEAPP",	0X1C,	-1);
	add_enum_member(id,"WM_FONTCHANGE",	0X1D,	-1);
	add_enum_member(id,"WM_TIMECHANGE",	0X1E,	-1);
	add_enum_member(id,"WM_CANCELMODE",	0X1F,	-1);
	add_enum_member(id,"WM_SETCURSOR",	0X20,	-1);
	add_enum_member(id,"WM_MOUSEACTIVATE",	0X21,	-1);
	add_enum_member(id,"WM_CHILDACTIVATE",	0X22,	-1);
	add_enum_member(id,"WM_QUEUESYNC",	0X23,	-1);
	add_enum_member(id,"WM_GETMINMAXINFO",	0X24,	-1);
	add_enum_member(id,"WM_LOGOFF",	0X25,	-1);
	add_enum_member(id,"WM_PAINTICON",	0X26,	-1);
	add_enum_member(id,"WM_ICONERASEBKGND",	0X27,	-1);
	add_enum_member(id,"WM_NEXTDLGCTL",	0X28,	-1);
	add_enum_member(id,"WM_ALTTABACTIVE",	0X29,	-1);
	add_enum_member(id,"WM_SPOOLERSTATUS",	0X2A,	-1);
	add_enum_member(id,"WM_DRAWITEM",	0X2B,	-1);
	add_enum_member(id,"WM_MEASUREITEM",	0X2C,	-1);
	add_enum_member(id,"WM_DELETEITEM",	0X2D,	-1);
	add_enum_member(id,"WM_VKEYTOITEM",	0X2E,	-1);
	add_enum_member(id,"WM_CHARTOITEM",	0X2F,	-1);
	add_enum_member(id,"WM_SETFONT",	0X30,	-1);
	add_enum_member(id,"WM_GETFONT",	0X31,	-1);
	add_enum_member(id,"WM_SETHOTKEY",	0X32,	-1);
	add_enum_member(id,"WM_GETHOTKEY",	0X33,	-1);
	add_enum_member(id,"WM_FILESYSCHANGE",	0X34,	-1);
	add_enum_member(id,"WM_ISACTIVEICON",	0X35,	-1);
	add_enum_member(id,"WM_QUERYPARKICON",	0X36,	-1);
	add_enum_member(id,"WM_QUERYDRAGICON",	0X37,	-1);
	add_enum_member(id,"WM_WINHELP",	0X38,	-1);
	add_enum_member(id,"WM_COMPAREITEM",	0X39,	-1);
	add_enum_member(id,"WM_FULLSCREEN",	0X3A,	-1);
	add_enum_member(id,"WM_CLIENTSHUTDOWN",	0X3B,	-1);
	add_enum_member(id,"WM_DDEMLEVENT",	0X3C,	-1);
	add_enum_member(id,"WM_GETOBJECT",	0X3D,	-1);
	add_enum_member(id,"MM_CALCSCROLL",	0X3F,	-1);
	add_enum_member(id,"WM_TESTING",	0X40,	-1);
	add_enum_member(id,"WM_COMPACTING",	0X41,	-1);
	add_enum_member(id,"WM_OTHERWINDOWCREATED",	0X42,	-1);
	add_enum_member(id,"WM_OTHERWINDOWDESTROYED",	0X43,	-1);
	add_enum_member(id,"WM_COMMNOTIFY",	0X44,	-1);
	add_enum_member(id,"WM_MEDIASTATUSCHANGE",	0X45,	-1);
	add_enum_member(id,"WM_WINDOWPOSCHANGING",	0X46,	-1);
	add_enum_member(id,"WM_WINDOWPOSCHANGED",	0X47,	-1);
	add_enum_member(id,"WM_POWER",	0X48,	-1);
	add_enum_member(id,"WM_COPYGLOBALDATA",	0X49,	-1);
	add_enum_member(id,"WM_COPYDATA",	0X4A,	-1);
	add_enum_member(id,"WM_CANCELJOURNAL",	0X4B,	-1);
	add_enum_member(id,"WM_LOGONNOTIFY",	0X4C,	-1);
	add_enum_member(id,"WM_KEYF1",	0X4D,	-1);
	add_enum_member(id,"WM_NOTIFY",	0X4E,	-1);
	add_enum_member(id,"WM_ACCESS_WINDOW",	0X4F,	-1);
	add_enum_member(id,"WM_INPUTLANGCHANGEREQUEST",	0X50,	-1);
	add_enum_member(id,"WM_INPUTLANGCHANGE",	0X51,	-1);
	add_enum_member(id,"WM_TCARD",	0X52,	-1);
	add_enum_member(id,"WM_HELP",	0X53,	-1);
	add_enum_member(id,"WM_USERCHANGED",	0X54,	-1);
	add_enum_member(id,"WM_NOTIFYFORMAT",	0X55,	-1);
	add_enum_member(id,"WM_QM_ACTIVATE",	0X60,	-1);
	add_enum_member(id,"WM_HOOK_DO_CALLBACK",	0X61,	-1);
	add_enum_member(id,"WM_SYSCOPYDATA",	0X62,	-1);
	add_enum_member(id,"WM_FINALDESTROY",	0X70,	-1);
	add_enum_member(id,"WM_MEASUREITEM_CLIENTDATA",	0X71,	-1);
	add_enum_member(id,"WM_CONTEXTMENU",	0X7B,	-1);
	add_enum_member(id,"WM_STYLECHANGING",	0X7C,	-1);
	add_enum_member(id,"WM_STYLECHANGED",	0X7D,	-1);
	add_enum_member(id,"WM_DISPLAYCHANGE",	0X7E,	-1);
	add_enum_member(id,"WM_GETICON",	0X7F,	-1);
	add_enum_member(id,"WM_SETICON",	0X80,	-1);
	add_enum_member(id,"WM_NCCREATE",	0X81,	-1);
	add_enum_member(id,"WM_NCDESTROY",	0X82,	-1);
	add_enum_member(id,"WM_NCCALCSIZE",	0X83,	-1);
	add_enum_member(id,"WM_NCHITTEST",	0X84,	-1);
	add_enum_member(id,"WM_NCPAINT",	0X85,	-1);
	add_enum_member(id,"WM_NCACTIVATE",	0X86,	-1);
	add_enum_member(id,"WM_GETDLGCODE",	0X87,	-1);
	add_enum_member(id,"WM_SYNCPAINT",	0X88,	-1);
	add_enum_member(id,"WM_SYNCTASK",	0X89,	-1);
	add_enum_member(id,"WM_NCMOUSEMOVE",	0XA0,	-1);
	add_enum_member(id,"WM_NCLBUTTONDOWN",	0XA1,	-1);
	add_enum_member(id,"WM_NCLBUTTONUP",	0XA2,	-1);
	add_enum_member(id,"WM_NCLBUTTONDBLCLK",	0XA3,	-1);
	add_enum_member(id,"WM_NCRBUTTONDOWN",	0XA4,	-1);
	add_enum_member(id,"WM_NCRBUTTONUP",	0XA5,	-1);
	add_enum_member(id,"WM_NCRBUTTONDBLCLK",	0XA6,	-1);
	add_enum_member(id,"WM_NCMBUTTONDOWN",	0XA7,	-1);
	add_enum_member(id,"WM_NCMBUTTONUP",	0XA8,	-1);
	add_enum_member(id,"WM_NCMBUTTONDBLCLK",	0XA9,	-1);
	add_enum_member(id,"WM_NCXBUTTONDOWN",	0XAB,	-1);
	add_enum_member(id,"WM_NCXBUTTONUP",	0XAC,	-1);
	add_enum_member(id,"WM_NCXBUTTONDBLCLK",	0XAD,	-1);
	add_enum_member(id,"EM_GETSEL",	0XB0,	-1);
	add_enum_member(id,"EM_SETSEL",	0XB1,	-1);
	add_enum_member(id,"EM_GETRECT",	0XB2,	-1);
	add_enum_member(id,"EM_SETRECT",	0XB3,	-1);
	add_enum_member(id,"EM_SETRECTNP",	0XB4,	-1);
	add_enum_member(id,"EM_SCROLL",	0XB5,	-1);
	add_enum_member(id,"EM_LINESCROLL",	0XB6,	-1);
	add_enum_member(id,"EM_SCROLLCARET",	0XB7,	-1);
	add_enum_member(id,"EM_GETMODIFY",	0XB8,	-1);
	add_enum_member(id,"EM_SETMODIFY",	0XB9,	-1);
	add_enum_member(id,"EM_GETLINECOUNT",	0XBA,	-1);
	add_enum_member(id,"EM_LINEINDEX",	0XBB,	-1);
	add_enum_member(id,"EM_SETHANDLE",	0XBC,	-1);
	add_enum_member(id,"EM_GETHANDLE",	0XBD,	-1);
	add_enum_member(id,"EM_GETTHUMB",	0XBE,	-1);
	add_enum_member(id,"EM_LINELENGTH",	0XC1,	-1);
	add_enum_member(id,"EM_REPLACESEL",	0XC2,	-1);
	add_enum_member(id,"EM_SETFONT",	0XC3,	-1);
	add_enum_member(id,"EM_GETLINE",	0XC4,	-1);
	add_enum_member(id,"EM_LIMITTEXT",	0XC5,	-1);
	add_enum_member(id,"EM_CANUNDO",	0XC6,	-1);
	add_enum_member(id,"EM_UNDO",	0XC7,	-1);
	add_enum_member(id,"EM_FMTLINES",	0XC8,	-1);
	add_enum_member(id,"EM_LINEFROMCHAR",	0XC9,	-1);
	add_enum_member(id,"EM_SETWORDBREAK",	0XCA,	-1);
	add_enum_member(id,"EM_SETTABSTOPS",	0XCB,	-1);
	add_enum_member(id,"EM_SETPASSWORDCHAR",	0XCC,	-1);
	add_enum_member(id,"EM_EMPTYUNDOBUFFER",	0XCD,	-1);
	add_enum_member(id,"EM_GETFIRSTVISIBLELINE",	0XCE,	-1);
	add_enum_member(id,"EM_SETREADONLY",	0XCF,	-1);
	add_enum_member(id,"EM_SETWORDBREAKPROC",	0XD0,	-1);
	add_enum_member(id,"EM_GETWORDBREAKPROC",	0XD1,	-1);
	add_enum_member(id,"EM_GETPASSWORDCHAR",	0XD2,	-1);
	add_enum_member(id,"EM_SETMARGINS",	0XD3,	-1);
	add_enum_member(id,"EM_GETMARGINS",	0XD4,	-1);
	add_enum_member(id,"EM_POSFROMCHAR",	0XD5,	-1);
	add_enum_member(id,"EM_CHARFROMPOS",	0XD6,	-1);
	add_enum_member(id,"SBM_SETPOS",	0XE0,	-1);
	add_enum_member(id,"SBM_GETPOS",	0XE1,	-1);
	add_enum_member(id,"SBM_SETRANGE",	0XE2,	-1);
	add_enum_member(id,"SBM_GETRANGE",	0XE3,	-1);
	add_enum_member(id,"SBM_ENABLE_ARROWS",	0XE4,	-1);
	add_enum_member(id,"SBM_SETRANGEREDRAW",	0XE6,	-1);
	add_enum_member(id,"SBM_SETSCROLLINFO",	0XE9,	-1);
	add_enum_member(id,"SBM_GETSCROLLINFO",	0XEA,	-1);
	add_enum_member(id,"SBM_GETSCROLLBARINFO",	0XEB,	-1);
	add_enum_member(id,"BM_GETCHECK",	0XF0,	-1);
	add_enum_member(id,"BM_SETCHECK",	0XF1,	-1);
	add_enum_member(id,"BM_GETSTATE",	0XF2,	-1);
	add_enum_member(id,"BM_SETSTATE",	0XF3,	-1);
	add_enum_member(id,"BM_SETSTYLE",	0XF4,	-1);
	add_enum_member(id,"BM_CLICK",	0XF5,	-1);
	add_enum_member(id,"BM_GETIMAGE",	0XF6,	-1);
	add_enum_member(id,"BM_SETIMAGE",	0XF7,	-1);
	add_enum_member(id,"BM_SETDONTCLICK",	0XF8,	-1);
	add_enum_member(id,"WM_INPUT",	0XFF,	-1);
	add_enum_member(id,"WM_KEYFIRST",	0X100,	-1);
	add_enum_member(id,"WM_KEYDOWN",	0X100,	-1);
	add_enum_member(id,"WM_KEYUP",	0X101,	-1);
	add_enum_member(id,"WM_CHAR",	0X102,	-1);
	add_enum_member(id,"WM_DEADCHAR",	0X103,	-1);
	add_enum_member(id,"WM_SYSKEYDOWN",	0X104,	-1);
	add_enum_member(id,"WM_SYSKEYUP",	0X105,	-1);
	add_enum_member(id,"WM_SYSCHAR",	0X106,	-1);
	add_enum_member(id,"WM_SYSDEADCHAR",	0X107,	-1);
	add_enum_member(id,"WM_KEYLAST",	0X108,	-1);
	add_enum_member(id,"WM_YOMICHAR",	0X108,	-1);
	add_enum_member(id,"WM_UNICHAR",	0X109,	-1);
	add_enum_member(id,"WM_CONVERTREQUEST",	0X10A,	-1);
	add_enum_member(id,"WM_CONVERTRESULT",	0X10B,	-1);
	add_enum_member(id,"WM_IM_INFO",	0X10C,	-1);
	add_enum_member(id,"WM_IME_STARTCOMPOSITION",	0X10D,	-1);
	add_enum_member(id,"WM_IME_ENDCOMPOSITION",	0X10E,	-1);
	add_enum_member(id,"WM_IME_COMPOSITION",	0X10F,	-1);
	add_enum_member(id,"WM_IME_KEYLAST",	0X10F,	-1);
	add_enum_member(id,"WM_INITDIALOG",	0X110,	-1);
	add_enum_member(id,"WM_COMMAND",	0X111,	-1);
	add_enum_member(id,"WM_SYSCOMMAND",	0X112,	-1);
	add_enum_member(id,"WM_TIMER",	0X113,	-1);
	add_enum_member(id,"WM_HSCROLL",	0X114,	-1);
	add_enum_member(id,"WM_VSCROLL",	0X115,	-1);
	add_enum_member(id,"WM_INITMENU",	0X116,	-1);
	add_enum_member(id,"WM_INITMENUPOPUP",	0X117,	-1);
	add_enum_member(id,"WM_SYSTIMER",	0X118,	-1);
	add_enum_member(id,"WM_MENUSELECT",	0X11F,	-1);
	add_enum_member(id,"WM_MENUCHAR",	0X120,	-1);
	add_enum_member(id,"WM_ENTERIDLE",	0X121,	-1);
	add_enum_member(id,"WM_MENURBUTTONUP",	0X122,	-1);
	add_enum_member(id,"WM_MENUDRAG",	0X123,	-1);
	add_enum_member(id,"WM_MENUGETOBJECT",	0X124,	-1);
	add_enum_member(id,"WM_UNINITMENUPOPUP",	0X125,	-1);
	add_enum_member(id,"WM_MENUCOMMAND",	0X126,	-1);
	add_enum_member(id,"WM_CHANGEUISTATE",	0X127,	-1);
	add_enum_member(id,"WM_UPDATEUISTATE",	0X128,	-1);
	add_enum_member(id,"WM_QUERYUISTATE",	0X129,	-1);
	add_enum_member(id,"WM_LBTRACKPOINT",	0X131,	-1);
	add_enum_member(id,"WM_CTLCOLORMSGBOX",	0X132,	-1);
	add_enum_member(id,"WM_CTLCOLOREDIT",	0X133,	-1);
	add_enum_member(id,"WM_CTLCOLORLISTBOX",	0X134,	-1);
	add_enum_member(id,"WM_CTLCOLORBTN",	0X135,	-1);
	add_enum_member(id,"WM_CTLCOLORDLG",	0X136,	-1);
	add_enum_member(id,"WM_CTLCOLORSCROLLBAR",	0X137,	-1);
	add_enum_member(id,"WM_CTLCOLORSTATIC",	0X138,	-1);
	add_enum_member(id,"CB_GETEDITSEL",	0X140,	-1);
	add_enum_member(id,"CB_LIMITTEXT",	0X141,	-1);
	add_enum_member(id,"CB_SETEDITSEL",	0X142,	-1);
	add_enum_member(id,"CB_ADDSTRING",	0X143,	-1);
	add_enum_member(id,"CB_DELETESTRING",	0X144,	-1);
	add_enum_member(id,"CB_DIR",	0X145,	-1);
	add_enum_member(id,"CB_GETCOUNT",	0X146,	-1);
	add_enum_member(id,"CB_GETCURSEL",	0X147,	-1);
	add_enum_member(id,"CB_GETLBTEXT",	0X148,	-1);
	add_enum_member(id,"CB_GETLBTEXTLEN",	0X149,	-1);
	add_enum_member(id,"CB_INSERTSTRING",	0X14A,	-1);
	add_enum_member(id,"CB_RESETCONTENT",	0X14B,	-1);
	add_enum_member(id,"CB_FINDSTRING",	0X14C,	-1);
	add_enum_member(id,"CB_SELECTSTRING",	0X14D,	-1);
	add_enum_member(id,"CB_SETCURSEL",	0X14E,	-1);
	add_enum_member(id,"CB_SHOWDROPDOWN",	0X14F,	-1);
	add_enum_member(id,"CB_GETITEMDATA",	0X150,	-1);
	add_enum_member(id,"CB_SETITEMDATA",	0X151,	-1);
	add_enum_member(id,"CB_GETDROPPEDCONTROLRECT",	0X152,	-1);
	add_enum_member(id,"CB_SETITEMHEIGHT",	0X153,	-1);
	add_enum_member(id,"CB_GETITEMHEIGHT",	0X154,	-1);
	add_enum_member(id,"CB_SETEXTENDEDUI",	0X155,	-1);
	add_enum_member(id,"CB_GETEXTENDEDUI",	0X156,	-1);
	add_enum_member(id,"CB_GETDROPPEDSTATE",	0X157,	-1);
	add_enum_member(id,"CB_FINDSTRINGEXACT",	0X158,	-1);
	add_enum_member(id,"CB_SETLOCALE",	0X159,	-1);
	add_enum_member(id,"CB_GETLOCALE",	0X15A,	-1);
	add_enum_member(id,"CB_GETTOPINDEX",	0X15B,	-1);
	add_enum_member(id,"CB_SETTOPINDEX",	0X15C,	-1);
	add_enum_member(id,"CB_GETHORIZONTALEXTENT",	0X15D,	-1);
	add_enum_member(id,"CB_SETHORIZONTALEXTENT",	0X15E,	-1);
	add_enum_member(id,"CB_GETDROPPEDWIDTH",	0X15F,	-1);
	add_enum_member(id,"CB_SETDROPPEDWIDTH",	0X160,	-1);
	add_enum_member(id,"CB_INITSTORAGE",	0X161,	-1);
	add_enum_member(id,"CB_GETCOMBOBOXINFO",	0X164,	-1);
	add_enum_member(id,"STM_SETICON",	0X170,	-1);
	add_enum_member(id,"STM_GETICON",	0X171,	-1);
	add_enum_member(id,"STM_SETIMAGE",	0X172,	-1);
	add_enum_member(id,"STM_GETIMAGE",	0X173,	-1);
	add_enum_member(id,"LB_ADDSTRING",	0X180,	-1);
	add_enum_member(id,"LB_INSERTSTRING",	0X181,	-1);
	add_enum_member(id,"LB_DELETESTRING",	0X182,	-1);
	add_enum_member(id,"LB_SELITEMRANGEEX",	0X183,	-1);
	add_enum_member(id,"LB_RESETCONTENT",	0X184,	-1);
	add_enum_member(id,"LB_SETSEL",	0X185,	-1);
	add_enum_member(id,"LB_SETCURSEL",	0X186,	-1);
	add_enum_member(id,"LB_GETSEL",	0X187,	-1);
	add_enum_member(id,"LB_GETCURSEL",	0X188,	-1);
	add_enum_member(id,"LB_GETTEXT",	0X189,	-1);
	add_enum_member(id,"LB_GETTEXTLEN",	0X18A,	-1);
	add_enum_member(id,"LB_GETCOUNT",	0X18B,	-1);
	add_enum_member(id,"LB_SELECTSTRING",	0X18C,	-1);
	add_enum_member(id,"LB_DIR",	0X18D,	-1);
	add_enum_member(id,"LB_GETTOPINDEX",	0X18E,	-1);
	add_enum_member(id,"LB_FINDSTRING",	0X18F,	-1);
	add_enum_member(id,"LB_GETSELCOUNT",	0X190,	-1);
	add_enum_member(id,"LB_GETSELITEMS",	0X191,	-1);
	add_enum_member(id,"LB_SETTABSTOPS",	0X192,	-1);
	add_enum_member(id,"LB_GETHORIZONTALEXTENT",	0X193,	-1);
	add_enum_member(id,"LB_SETHORIZONTALEXTENT",	0X194,	-1);
	add_enum_member(id,"LB_SETCOLUMNWIDTH",	0X195,	-1);
	add_enum_member(id,"LB_ADDFILE",	0X196,	-1);
	add_enum_member(id,"LB_SETTOPINDEX",	0X197,	-1);
	add_enum_member(id,"LB_GETITEMRECT",	0X198,	-1);
	add_enum_member(id,"LB_GETITEMDATA",	0X199,	-1);
	add_enum_member(id,"LB_SETITEMDATA",	0X19A,	-1);
	add_enum_member(id,"LB_SELITEMRANGE",	0X19B,	-1);
	add_enum_member(id,"LB_SETANCHORINDEX",	0X19C,	-1);
	add_enum_member(id,"LB_GETANCHORINDEX",	0X19D,	-1);
	add_enum_member(id,"LB_SETCARETINDEX",	0X19E,	-1);
	add_enum_member(id,"LB_GETCARETINDEX",	0X19F,	-1);
	add_enum_member(id,"LB_SETITEMHEIGHT",	0X1A0,	-1);
	add_enum_member(id,"LB_GETITEMHEIGHT",	0X1A1,	-1);
	add_enum_member(id,"LB_FINDSTRINGEXACT",	0X1A2,	-1);
	add_enum_member(id,"LBCB_CARETON",	0X1A3,	-1);
	add_enum_member(id,"LBCB_CARETOFF",	0X1A4,	-1);
	add_enum_member(id,"LB_SETLOCALE",	0X1A5,	-1);
	add_enum_member(id,"LB_GETLOCALE",	0X1A6,	-1);
	add_enum_member(id,"LB_SETCOUNT",	0X1A7,	-1);
	add_enum_member(id,"LB_INITSTORAGE",	0X1A8,	-1);
	add_enum_member(id,"LB_ITEMFROMPOINT",	0X1A9,	-1);
	add_enum_member(id,"LB_INSERTSTRINGUPPER",	0X1AA,	-1);
	add_enum_member(id,"LB_INSERTSTRINGLOWER",	0X1AB,	-1);
	add_enum_member(id,"LB_ADDSTRINGUPPER",	0X1AC,	-1);
	add_enum_member(id,"LB_ADDSTRINGLOWER",	0X1AD,	-1);
	add_enum_member(id,"LB_GETLISTBOXINFO",	0X1B2,	-1);
	add_enum_member(id,"MN_SETHMENU",	0X1E0,	-1);
	add_enum_member(id,"MN_GETHMENU",	0X1E1,	-1);
	add_enum_member(id,"MN_SIZEWINDOW",	0X1E2,	-1);
	add_enum_member(id,"MN_OPENHIERARCHY",	0X1E3,	-1);
	add_enum_member(id,"MN_CLOSEHIERARCHY",	0X1E4,	-1);
	add_enum_member(id,"MN_SELECTITEM",	0X1E5,	-1);
	add_enum_member(id,"MN_CANCELMENUS",	0X1E6,	-1);
	add_enum_member(id,"MN_SELECTFIRSTVALIDITEM",	0X1E7,	-1);
	add_enum_member(id,"MN_GETPPOPUPMENU",	0X1EA,	-1);
	add_enum_member(id,"MN_FINDMENUWINDOWFROMPOINT",	0X1EB,	-1);
	add_enum_member(id,"MN_SHOWPOPUPWINDOW",	0X1EC,	-1);
	add_enum_member(id,"MN_BUTTONDOWN",	0X1ED,	-1);
	add_enum_member(id,"MN_MOUSEMOVE",	0X1EE,	-1);
	add_enum_member(id,"MN_BUTTONUP",	0X1EF,	-1);
	add_enum_member(id,"MN_SETTIMERTOOPENHIERARCHY",	0X1F0,	-1);
	add_enum_member(id,"MN_DBLCLK",	0X1F1,	-1);
	add_enum_member(id,"WM_MOUSEFIRST",	0X200,	-1);
	add_enum_member(id,"WM_MOUSEMOVE",	0X200,	-1);
	add_enum_member(id,"WM_LBUTTONDOWN",	0X201,	-1);
	add_enum_member(id,"WM_LBUTTONUP",	0X202,	-1);
	add_enum_member(id,"WM_LBUTTONDBLCLK",	0X203,	-1);
	add_enum_member(id,"WM_RBUTTONDOWN",	0X204,	-1);
	add_enum_member(id,"WM_RBUTTONUP",	0X205,	-1);
	add_enum_member(id,"WM_RBUTTONDBLCLK",	0X206,	-1);
	add_enum_member(id,"WM_MBUTTONDOWN",	0X207,	-1);
	add_enum_member(id,"WM_MBUTTONUP",	0X208,	-1);
	add_enum_member(id,"WM_MBUTTONDBLCLK",	0X209,	-1);
	add_enum_member(id,"WM_MOUSEWHEEL",	0X20A,	-1);
	add_enum_member(id,"WM_XBUTTONDOWN",	0X20B,	-1);
	add_enum_member(id,"WM_XBUTTONUP",	0X20C,	-1);
	add_enum_member(id,"WM_XBUTTONDBLCLK",	0X20D,	-1);
	add_enum_member(id,"WM_MOUSELAST",	0X20D,	-1);
	add_enum_member(id,"WM_PARENTNOTIFY",	0X210,	-1);
	add_enum_member(id,"WM_ENTERMENULOOP",	0X211,	-1);
	add_enum_member(id,"WM_EXITMENULOOP",	0X212,	-1);
	add_enum_member(id,"WM_NEXTMENU",	0X213,	-1);
	add_enum_member(id,"WM_SIZING",	0X214,	-1);
	add_enum_member(id,"WM_CAPTURECHANGED",	0X215,	-1);
	add_enum_member(id,"WM_MOVING",	0X216,	-1);
	add_enum_member(id,"WM_POWERBROADCAST",	0X218,	-1);
	add_enum_member(id,"WM_DEVICECHANGE",	0X219,	-1);
	add_enum_member(id,"WM_MDICREATE",	0X220,	-1);
	add_enum_member(id,"WM_MDIDESTROY",	0X221,	-1);
	add_enum_member(id,"WM_MDIACTIVATE",	0X222,	-1);
	add_enum_member(id,"WM_MDIRESTORE",	0X223,	-1);
	add_enum_member(id,"WM_MDINEXT",	0X224,	-1);
	add_enum_member(id,"WM_MDIMAXIMIZE",	0X225,	-1);
	add_enum_member(id,"WM_MDITILE",	0X226,	-1);
	add_enum_member(id,"WM_MDICASCADE",	0X227,	-1);
	add_enum_member(id,"WM_MDIICONARRANGE",	0X228,	-1);
	add_enum_member(id,"WM_MDIGETACTIVE",	0X229,	-1);
	add_enum_member(id,"WM_DROPOBJECT",	0X22A,	-1);
	add_enum_member(id,"WM_QUERYDROPOBJECT",	0X22B,	-1);
	add_enum_member(id,"WM_BEGINDRAG",	0X22C,	-1);
	add_enum_member(id,"WM_DRAGLOOP",	0X22D,	-1);
	add_enum_member(id,"WM_DRAGSELECT",	0X22E,	-1);
	add_enum_member(id,"WM_DRAGMOVE",	0X22F,	-1);
	add_enum_member(id,"WM_MDISETMENU",	0X230,	-1);
	add_enum_member(id,"WM_ENTERSIZEMOVE",	0X231,	-1);
	add_enum_member(id,"WM_EXITSIZEMOVE",	0X232,	-1);
	add_enum_member(id,"WM_DROPFILES",	0X233,	-1);
	add_enum_member(id,"WM_MDIREFRESHMENU",	0X234,	-1);
	add_enum_member(id,"WM_HANGEULFIRST",	0X280,	-1);
	add_enum_member(id,"WM_KANJIFIRST",	0X280,	-1);
	add_enum_member(id,"WM_IME_SETCONTEXT",	0X281,	-1);
	add_enum_member(id,"WM_IME_NOTIFY",	0X282,	-1);
	add_enum_member(id,"WM_IME_CONTROL",	0X283,	-1);
	add_enum_member(id,"WM_IME_COMPOSITIONFULL",	0X284,	-1);
	add_enum_member(id,"WM_IME_SELECT",	0X285,	-1);
	add_enum_member(id,"WM_IME_CHAR",	0X286,	-1);
	add_enum_member(id,"WM_IME_SYSTEM",	0X287,	-1);
	add_enum_member(id,"WM_IME_REQUEST",	0X288,	-1);
	add_enum_member(id,"WM_IME_KEYDOWN",	0X290,	-1);
	add_enum_member(id,"WM_IME_KEYUP",	0X291,	-1);
	add_enum_member(id,"WM_HANGEULLAST",	0X29F,	-1);
	add_enum_member(id,"WM_KANJILAST",	0X29F,	-1);
	add_enum_member(id,"WM_NCMOUSEHOVER",	0X2A0,	-1);
	add_enum_member(id,"WM_MOUSEHOVER",	0X2A1,	-1);
	add_enum_member(id,"WM_NCMOUSELEAVE",	0X2A2,	-1);
	add_enum_member(id,"WM_MOUSELEAVE",	0X2A3,	-1);
	add_enum_member(id,"WM_TRACKMOUSEEVENT_LAST",	0X2AF,	-1);
	add_enum_member(id,"WM_WTSSESSION_CHANGE",	0X2B1,	-1);
	add_enum_member(id,"WM_TABLET_FIRST",	0X2C0,	-1);
	add_enum_member(id,"WM_TABLET_LAST",	0X2DF,	-1);
	add_enum_member(id,"WM_CUT",	0X300,	-1);
	add_enum_member(id,"WM_COPY",	0X301,	-1);
	add_enum_member(id,"WM_PASTE",	0X302,	-1);
	add_enum_member(id,"WM_CLEAR",	0X303,	-1);
	add_enum_member(id,"WM_UNDO",	0X304,	-1);
	add_enum_member(id,"WM_RENDERFORMAT",	0X305,	-1);
	add_enum_member(id,"WM_RENDERALLFORMATS",	0X306,	-1);
	add_enum_member(id,"WM_DESTROYCLIPBOARD",	0X307,	-1);
	add_enum_member(id,"WM_DRAWCLIPBOARD",	0X308,	-1);
	add_enum_member(id,"WM_PAINTCLIPBOARD",	0X309,	-1);
	add_enum_member(id,"WM_VSCROLLCLIPBOARD",	0X30A,	-1);
	add_enum_member(id,"WM_SIZECLIPBOARD",	0X30B,	-1);
	add_enum_member(id,"WM_ASKCBFORMATNAME",	0X30C,	-1);
	add_enum_member(id,"WM_CHANGECBCHAIN",	0X30D,	-1);
	add_enum_member(id,"WM_HSCROLLCLIPBOARD",	0X30E,	-1);
	add_enum_member(id,"WM_QUERYNEWPALETTE",	0X30F,	-1);
	add_enum_member(id,"WM_PALETTEISCHANGING",	0X310,	-1);
	add_enum_member(id,"WM_PALETTECHANGED",	0X311,	-1);
	add_enum_member(id,"WM_HOTKEY",	0X312,	-1);
	add_enum_member(id,"WM_SYSMENU",	0X313,	-1);
	add_enum_member(id,"WM_HOOKMSG",	0X314,	-1);
	add_enum_member(id,"WM_EXITPROCESS",	0X315,	-1);
	add_enum_member(id,"WM_WAKETHREAD",	0X316,	-1);
	add_enum_member(id,"WM_PRINT",	0X317,	-1);
	add_enum_member(id,"WM_PRINTCLIENT",	0X318,	-1);
	add_enum_member(id,"WM_APPCOMMAND",	0X319,	-1);
	add_enum_member(id,"WM_THEMECHANGED",	0X31A,	-1);
	add_enum_member(id,"WM_HANDHELDFIRST",	0X358,	-1);
	add_enum_member(id,"WM_HANDHELDLAST",	0X35F,	-1);
	add_enum_member(id,"WM_AFXFIRST",	0X360,	-1);
	add_enum_member(id,"WM_AFXLAST",	0X37F,	-1);
	add_enum_member(id,"WM_PENWINFIRST",	0X380,	-1);
	add_enum_member(id,"WM_PENWINLAST",	0X38F,	-1);
	add_enum_member(id,"WM_INTERNAL_COALESCE_FIRST",	0X390,	-1);
	add_enum_member(id,"WM_COALESCE_FIRST",	0X390,	-1);
	add_enum_member(id,"WM_COALESCE_LAST",	0X39F,	-1);
	add_enum_member(id,"WM_MM_RESERVED_FIRST",	0X3A0,	-1);
	add_enum_member(id,"WM_MM_RESERVED_LAST",	0X3DF,	-1);
	add_enum_member(id,"WM_DDE_INITIATE",	0X3E0,	-1);
	add_enum_member(id,"WM_DDE_TERMINATE",	0X3E1,	-1);
	add_enum_member(id,"WM_DDE_ADVISE",	0X3E2,	-1);
	add_enum_member(id,"WM_DDE_UNADVISE",	0X3E3,	-1);
	add_enum_member(id,"WM_DDE_ACK",	0X3E4,	-1);
	add_enum_member(id,"WM_DDE_DATA",	0X3E5,	-1);
	add_enum_member(id,"WM_DDE_REQUEST",	0X3E6,	-1);
	add_enum_member(id,"WM_DDE_POKE",	0X3E7,	-1);
	add_enum_member(id,"WM_DDE_EXECUTE",	0X3E8,	-1);
	add_enum_member(id,"WM_DBNOTIFICATION",	0X3FD,	-1);
	add_enum_member(id,"WM_NETCONNECT",	0X3FE,	-1);
	add_enum_member(id,"WM_HIBERNATE",	0X3FF,	-1);
	add_enum_member(id,"WM_USER",	0X400,	-1);
	add_enum_member(id,"WM_APP",	0X8000,	-1);
	id = add_enum(-1,"MACRO_VK",0x1100000);
	add_enum_member(id,"VK_LBUTTON",	0X1,	-1);
	add_enum_member(id,"VK_RBUTTON",	0X2,	-1);
	add_enum_member(id,"VK_CANCEL",	0X3,	-1);
	add_enum_member(id,"VK_MBUTTON",	0X4,	-1);
	add_enum_member(id,"VK_BACK",	0X8,	-1);
	add_enum_member(id,"VK_TAB",	0X9,	-1);
	add_enum_member(id,"VK_CLEAR",	0XC,	-1);
	add_enum_member(id,"VK_RETURN",	0XD,	-1);
	add_enum_member(id,"VK_SHIFT",	0X10,	-1);
	add_enum_member(id,"VK_CONTROL",	0X11,	-1);
	add_enum_member(id,"VK_MENU",	0X12,	-1);
	add_enum_member(id,"VK_PAUSE",	0X13,	-1);
	add_enum_member(id,"VK_CAPITAL",	0X14,	-1);
	add_enum_member(id,"VK_KANA",	0X15,	-1);
	add_enum_member(id,"VK_HANGEUL",	0X15,	-1);
	add_enum_member(id,"VK_HANGUL",	0X15,	-1);
	add_enum_member(id,"VK_JUNJA",	0X17,	-1);
	add_enum_member(id,"VK_FINAL",	0X18,	-1);
	add_enum_member(id,"VK_HANJA",	0X19,	-1);
	add_enum_member(id,"VK_KANJI",	0X19,	-1);
	add_enum_member(id,"VK_ESCAPE",	0X1B,	-1);
	add_enum_member(id,"VK_CONVERT",	0X1C,	-1);
	add_enum_member(id,"VK_NONCONVERT",	0X1D,	-1);
	add_enum_member(id,"VK_ACCEPT",	0X1E,	-1);
	add_enum_member(id,"VK_MODECHANGE",	0X1F,	-1);
	add_enum_member(id,"VK_SPACE",	0X20,	-1);
	add_enum_member(id,"VK_PRIOR",	0X21,	-1);
	add_enum_member(id,"VK_NEXT",	0X22,	-1);
	add_enum_member(id,"VK_END",	0X23,	-1);
	add_enum_member(id,"VK_HOME",	0X24,	-1);
	add_enum_member(id,"VK_LEFT",	0X25,	-1);
	add_enum_member(id,"VK_UP",	0X26,	-1);
	add_enum_member(id,"VK_RIGHT",	0X27,	-1);
	add_enum_member(id,"VK_DOWN",	0X28,	-1);
	add_enum_member(id,"VK_SELECT",	0X29,	-1);
	add_enum_member(id,"VK_PRINT",	0X2A,	-1);
	add_enum_member(id,"VK_EXECUTE",	0X2B,	-1);
	add_enum_member(id,"VK_SNAPSHOT",	0X2C,	-1);
	add_enum_member(id,"VK_INSERT",	0X2D,	-1);
	add_enum_member(id,"VK_DELETE",	0X2E,	-1);
	add_enum_member(id,"VK_HELP",	0X2F,	-1);
	add_enum_member(id,"VK_LWIN",	0X5B,	-1);
	add_enum_member(id,"VK_RWIN",	0X5C,	-1);
	add_enum_member(id,"VK_APPS",	0X5D,	-1);
	add_enum_member(id,"VK_NUMPAD0",	0X60,	-1);
	add_enum_member(id,"VK_NUMPAD1",	0X61,	-1);
	add_enum_member(id,"VK_NUMPAD2",	0X62,	-1);
	add_enum_member(id,"VK_NUMPAD3",	0X63,	-1);
	add_enum_member(id,"VK_NUMPAD4",	0X64,	-1);
	add_enum_member(id,"VK_NUMPAD5",	0X65,	-1);
	add_enum_member(id,"VK_NUMPAD6",	0X66,	-1);
	add_enum_member(id,"VK_NUMPAD7",	0X67,	-1);
	add_enum_member(id,"VK_NUMPAD8",	0X68,	-1);
	add_enum_member(id,"VK_NUMPAD9",	0X69,	-1);
	add_enum_member(id,"VK_MULTIPLY",	0X6A,	-1);
	add_enum_member(id,"VK_ADD",	0X6B,	-1);
	add_enum_member(id,"VK_SEPARATOR",	0X6C,	-1);
	add_enum_member(id,"VK_SUBTRACT",	0X6D,	-1);
	add_enum_member(id,"VK_DECIMAL",	0X6E,	-1);
	add_enum_member(id,"VK_DIVIDE",	0X6F,	-1);
	add_enum_member(id,"VK_F1",	0X70,	-1);
	add_enum_member(id,"VK_F2",	0X71,	-1);
	add_enum_member(id,"VK_F3",	0X72,	-1);
	add_enum_member(id,"VK_F4",	0X73,	-1);
	add_enum_member(id,"VK_F5",	0X74,	-1);
	add_enum_member(id,"VK_F6",	0X75,	-1);
	add_enum_member(id,"VK_F7",	0X76,	-1);
	add_enum_member(id,"VK_F8",	0X77,	-1);
	add_enum_member(id,"VK_F9",	0X78,	-1);
	add_enum_member(id,"VK_F10",	0X79,	-1);
	add_enum_member(id,"VK_F11",	0X7A,	-1);
	add_enum_member(id,"VK_F12",	0X7B,	-1);
	add_enum_member(id,"VK_F13",	0X7C,	-1);
	add_enum_member(id,"VK_F14",	0X7D,	-1);
	add_enum_member(id,"VK_F15",	0X7E,	-1);
	add_enum_member(id,"VK_F16",	0X7F,	-1);
	add_enum_member(id,"VK_F17",	0X80,	-1);
	add_enum_member(id,"VK_F18",	0X81,	-1);
	add_enum_member(id,"VK_F19",	0X82,	-1);
	add_enum_member(id,"VK_F20",	0X83,	-1);
	add_enum_member(id,"VK_F21",	0X84,	-1);
	add_enum_member(id,"VK_F22",	0X85,	-1);
	add_enum_member(id,"VK_F23",	0X86,	-1);
	add_enum_member(id,"VK_F24",	0X87,	-1);
	add_enum_member(id,"VK_NUMLOCK",	0X90,	-1);
	add_enum_member(id,"VK_SCROLL",	0X91,	-1);
	add_enum_member(id,"VK_LSHIFT",	0XA0,	-1);
	add_enum_member(id,"VK_RSHIFT",	0XA1,	-1);
	add_enum_member(id,"VK_LCONTROL",	0XA2,	-1);
	add_enum_member(id,"VK_RCONTROL",	0XA3,	-1);
	add_enum_member(id,"VK_LMENU",	0XA4,	-1);
	add_enum_member(id,"VK_RMENU",	0XA5,	-1);
	add_enum_member(id,"VK_PROCESSKEY",	0XE5,	-1);
	add_enum_member(id,"VK_ATTN",	0XF6,	-1);
	add_enum_member(id,"VK_CRSEL",	0XF7,	-1);
	add_enum_member(id,"VK_EXSEL",	0XF8,	-1);
	add_enum_member(id,"VK_EREOF",	0XF9,	-1);
	add_enum_member(id,"VK_PLAY",	0XFA,	-1);
	add_enum_member(id,"VK_ZOOM",	0XFB,	-1);
	add_enum_member(id,"VK_NONAME",	0XFC,	-1);
	add_enum_member(id,"VK_PA1",	0XFD,	-1);
	add_enum_member(id,"VK_OEM_CLEAR",	0XFE,	-1);
	add_enum_member(id,"WH_MIN",	0XFFFFFFFF,	-1);
	id = add_enum(-1,"MACRO_DSBPLAY",0x1100000);
	set_enum_bf(id,1);
	add_enum_member(id,"DSBPLAY_LOOPING",	0X1,	0x1);
	id = add_enum(-1,"MACRO_DSBCAPS",0x1100000);
	set_enum_bf(id,1);
	add_enum_member(id,"DSBCAPS_PRIMARYBUFFER",	0X1,	0x1);
	add_enum_member(id,"DSBCAPS_STATIC",	0X2,	0x2);
	add_enum_member(id,"DSBCAPS_LOCHARDWARE",	0X4,	0x4);
	add_enum_member(id,"DSBCAPS_LOCSOFTWARE",	0X8,	0x8);
	add_enum_member(id,"DSBCAPS_CTRL3D",	0X10,	0x10);
	add_enum_member(id,"DSBCAPS_CTRLFREQUENCY",	0X20,	0x20);
	add_enum_member(id,"DSBCAPS_CTRLPAN",	0X40,	0x40);
	add_enum_member(id,"DSBCAPS_CTRLVOLUME",	0X80,	0x80);
	add_enum_member(id,"DSBCAPS_CTRLPOSITIONNOTIFY",	0X100,	0x100);
	id = add_enum(-1,"DefOrg",0x1100000);
	add_enum_member(id,"MODEPARADD",	0,	-1);
	add_enum_member(id,"SETWAIT",	0X1,	-1);
	add_enum_member(id,"MODEPARSUB",	0X1,	-1);
	add_enum_member(id,"SETGRID",	0X2,	-1);
	add_enum_member(id,"SETALLOC",	0X4,	-1);
	add_enum_member(id,"MAXMELODY",	0X8,	-1);
	add_enum_member(id,"MAXDRAM",	0X8,	-1);
	add_enum_member(id,"SETREPEAT",	0X8,	-1);
	add_enum_member(id,"MODEMULTIPLY",	0XA,	-1);
	add_enum_member(id,"MAXTRACK",	0X10,	-1);
	add_enum_member(id,"SETFREQ",	0X10,	-1);
	add_enum_member(id,"SETWAVE",	0X20,	-1);
	add_enum_member(id,"NUMDRAMITEM",	0X2A,	-1);
	add_enum_member(id,"SETPIPI",	0X40,	-1);
	add_enum_member(id,"MODEDECAY",	0X40,	-1);
	add_enum_member(id,"MAXNOTELENGTH",	0XFF,	-1);
	add_enum_member(id,"KEYDUMMY",	0XFF,	-1);
	add_enum_member(id,"PANDUMMY",	0XFF,	-1);
	add_enum_member(id,"VOLDUMMY",	0XFF,	-1);
	add_enum_member(id,"ALLOCNOTE",	0X1000,	-1);
	add_enum_member(id,"SETALL",	0XFFFFFFFF,	-1);
	id = add_enum(-1,"MACRO_TIMERR",0x2220000);
	add_enum_member(id,"TIMERR_NOERROR",	0,	-1);
	add_enum_member(id,"TIMERR_NOCANDO",	0X61,	-1);
	add_enum_member(id,"TIMERR_STRUCT",	0X81,	-1);
	id = add_enum(-1,"MACRO_NULL",0x2220000);
	add_enum_member(id,"NULL",	0,	-1);
	id = add_enum(-1,"MACRO_TIME_ONESHOT",0x1100000);
	add_enum_member(id,"TIME_ONESHOT",	0,	-1);
	add_enum_member(id,"TIME_PERIODIC",	0X1,	-1);
	id = add_enum(-1,"bullets",0x1100000);
	add_enum_member(id,"bulletSnakeLevel1",	0X1,	-1);
	add_enum_member(id,"bulletSnakeLevel2",	0X2,	-1);
	add_enum_member(id,"bulletSnakeLevel3",	0X3,	-1);
	add_enum_member(id,"bulletPolarStarLevel1",	0X4,	-1);
	add_enum_member(id,"bulletPolarStarLevel2",	0X5,	-1);
	add_enum_member(id,"bulletPolarStarLevel3",	0X6,	-1);
	add_enum_member(id,"bulletFireballLevel1",	0X7,	-1);
	add_enum_member(id,"bulletFireballLevel2",	0X8,	-1);
	add_enum_member(id,"bulletFireballLevel3",	0X9,	-1);
	add_enum_member(id,"bulletMachineGunLevel1",	0XA,	-1);
	add_enum_member(id,"bulletMachineGunLevel2",	0XB,	-1);
	add_enum_member(id,"bulletMachineGunLevel3",	0XC,	-1);
	add_enum_member(id,"bulletMissileLauncherLevel1",	0XD,	-1);
	add_enum_member(id,"bulletMissileLauncherLevel2",	0XE,	-1);
	add_enum_member(id,"bulletMissileLauncherLevel3",	0XF,	-1);
	add_enum_member(id,"bulletMissileExplosionLevel1",	0X10,	-1);
	add_enum_member(id,"bulletMissileExplosionLevel2",	0X11,	-1);
	add_enum_member(id,"bulletMissileExplosionLevel3",	0X12,	-1);
	add_enum_member(id,"bulletBubblerLevel1",	0X13,	-1);
	add_enum_member(id,"bulletBubblerLevel2",	0X14,	-1);
	add_enum_member(id,"bulletBubblerLevel3",	0X15,	-1);
	add_enum_member(id,"bulletBubblerSpurs",	0X16,	-1);
	add_enum_member(id,"bulletBladeSlash",	0X17,	-1);
	add_enum_member(id,"bulletUnused",	0X18,	-1);
	add_enum_member(id,"bulletBladeLevel1",	0X19,	-1);
	add_enum_member(id,"bulletBladeLevel2",	0X1A,	-1);
	add_enum_member(id,"bulletBladeLevel3",	0X1B,	-1);
	add_enum_member(id,"bulletSuperMissileLauncherLevel1",	0X1C,	-1);
	add_enum_member(id,"bulletSuperMissileLauncherLevel2",	0X1D,	-1);
	add_enum_member(id,"bulletSuperMissileLauncherLevel3",	0X1E,	-1);
	add_enum_member(id,"bulletNemesisLevel1",	0X22,	-1);
	add_enum_member(id,"bulletNemesisLevel2",	0X23,	-1);
	add_enum_member(id,"bulletNemesisLevel3",	0X24,	-1);
	add_enum_member(id,"bulletChargelessSpurLevel1",	0X25,	-1);
	add_enum_member(id,"bulletChargelessSpurLevel2",	0X26,	-1);
	add_enum_member(id,"bulletChargelessSpurLevel3",	0X27,	-1);
	add_enum_member(id,"bulletNonMovingSpurLevel1",	0X28,	-1);
	add_enum_member(id,"bulletNonMovingSpurLevel2",	0X29,	-1);
	add_enum_member(id,"bulletNonMovingSpurLevel3",	0X2A,	-1);
	add_enum_member(id,"bulletNemesisRelated",	0X2B,	-1);
	add_enum_member(id,"bulletSpurLevel2",	0X2C,	-1);
	add_enum_member(id,"bulletSpurLevel3",	0X2D,	-1);
	id = add_enum(-1,"musics",0x1100000);
	add_enum_member(id,"musicSilence",	0,	-1);
	add_enum_member(id,"musicMischievousRobot",	0X1,	-1);
	add_enum_member(id,"musicSafety",	0X2,	-1);
	add_enum_member(id,"musicGameOver",	0X3,	-1);
	add_enum_member(id,"musicGravity",	0X4,	-1);
	add_enum_member(id,"musicOnToGrasstown",	0X5,	-1);
	add_enum_member(id,"musicMeltdown2",	0X6,	-1);
	add_enum_member(id,"musicEyesOfFlame",	0X7,	-1);
	add_enum_member(id,"musicGestation",	0X8,	-1);
	add_enum_member(id,"musicMimigaTown",	0X9,	-1);
	add_enum_member(id,"musicGetItem",	0XA,	-1);
	add_enum_member(id,"musicBalrogsTheme",	0XB,	-1);
	add_enum_member(id,"musicCemetary",	0XC,	-1);
	add_enum_member(id,"musicPlant",	0XD,	-1);
	add_enum_member(id,"musicPulse",	0XE,	-1);
	add_enum_member(id,"musicVictory",	0XF,	-1);
	add_enum_member(id,"musicGetLifeCapsule",	0X10,	-1);
	add_enum_member(id,"musicTyrant",	0X11,	-1);
	add_enum_member(id,"musicRun",	0X12,	-1);
	add_enum_member(id,"musicJenka1",	0X13,	-1);
	add_enum_member(id,"musicLabyrinthFight",	0X14,	-1);
	add_enum_member(id,"musicAccess",	0X15,	-1);
	add_enum_member(id,"musicOppression",	0X16,	-1);
	add_enum_member(id,"musicGeothermal",	0X17,	-1);
	add_enum_member(id,"musicCaveStory",	0X18,	-1);
	add_enum_member(id,"musicMoonsong",	0X19,	-1);
	add_enum_member(id,"musicHerosend",	0X1A,	-1);
	add_enum_member(id,"musicScorchingBack",	0X1B,	-1);
	add_enum_member(id,"musicQuiet",	0X1C,	-1);
	add_enum_member(id,"musicFinalCave",	0X1D,	-1);
	add_enum_member(id,"musicBalcony",	0X1E,	-1);
	add_enum_member(id,"musicCharge",	0X1F,	-1);
	add_enum_member(id,"musicLastBattle",	0X20,	-1);
	add_enum_member(id,"musicTheWayBackHome",	0X21,	-1);
	add_enum_member(id,"musicZombie",	0X22,	-1);
	add_enum_member(id,"musicBreakDown",	0X23,	-1);
	add_enum_member(id,"musicRunningHell",	0X24,	-1);
	add_enum_member(id,"musicJenka2",	0X25,	-1);
	add_enum_member(id,"musicLivingWaterway",	0X26,	-1);
	add_enum_member(id,"musicSealChamber",	0X27,	-1);
	add_enum_member(id,"musicTorokosTheme",	0X28,	-1);
	add_enum_member(id,"musicWhite",	0X29,	-1);
	id = add_enum(-1,"soundEffects",0x1100000);
	add_enum_member(id,"SFXSilence68",	0,	-1);
	add_enum_member(id,"SFXYNChangeChoice",	0X1,	-1);
	add_enum_member(id,"SFXMessageTyping",	0X2,	-1);
	add_enum_member(id,"SFXQuoteBumpHead",	0X3,	-1);
	add_enum_member(id,"SFXSwitchWeapon",	0X4,	-1);
	add_enum_member(id,"SFXYNPrompt",	0X5,	-1);
	add_enum_member(id,"SFXHighPitchCritterHop",	0X6,	-1);
	add_enum_member(id,"SFXSilence73",	0X7,	-1);
	add_enum_member(id,"SFXSilence74",	0X8,	-1);
	add_enum_member(id,"SFXSilence75",	0X9,	-1);
	add_enum_member(id,"SFXSilence69",	0XA,	-1);
	add_enum_member(id,"SFXDoorOpen",	0XB,	-1);
	add_enum_member(id,"SFXDestroyBreakableBlock",	0XC,	-1);
	add_enum_member(id,"SFXSilence70",	0XD,	-1);
	add_enum_member(id,"SFXGetEXP",	0XE,	-1);
	add_enum_member(id,"SFXQuoteJump",	0XF,	-1);
	add_enum_member(id,"SFXQuoteHurt",	0X10,	-1);
	add_enum_member(id,"SFXQuoteDie",	0X11,	-1);
	add_enum_member(id,"SFXYNConfirm",	0X12,	-1);
	add_enum_member(id,"SFXSilence71",	0X13,	-1);
	add_enum_member(id,"SFXQuoteHeal",	0X14,	-1);
	add_enum_member(id,"SFXBubble",	0X15,	-1);
	add_enum_member(id,"SFXChestOpen",	0X16,	-1);
	add_enum_member(id,"SFXQuoteHitGround",	0X17,	-1);
	add_enum_member(id,"SFXQuoteWalk",	0X18,	-1);
	add_enum_member(id,"SFXSillyExplosion",	0X19,	-1);
	add_enum_member(id,"SFXLargeObjectHitGround",	0X1A,	-1);
	add_enum_member(id,"SFXLevelUp",	0X1B,	-1);
	add_enum_member(id,"SFXShotHitWall",	0X1C,	-1);
	add_enum_member(id,"SFXTeleport",	0X1D,	-1);
	add_enum_member(id,"SFXCritterHop",	0X1E,	-1);
	add_enum_member(id,"SFXShotHitInvulnerableEntity",	0X1F,	-1);
	add_enum_member(id,"SFXPolarStarShootLevel12",	0X20,	-1);
	add_enum_member(id,"SFXFireballShoot",	0X21,	-1);
	add_enum_member(id,"SFXFireballBounce",	0X22,	-1);
	add_enum_member(id,"SFXlargeExplosion",	0X23,	-1);
	add_enum_member(id,"SFXSilence72",	0X24,	-1);
	add_enum_member(id,"SFXNoAmmo",	0X25,	-1);
	add_enum_member(id,"SFXItemGet",	0X26,	-1);
	add_enum_member(id,"SFXEnemyShootProjectile",	0X27,	-1);
	add_enum_member(id,"SFXStreamNoiseSSS2",	0X28,	-1);
	add_enum_member(id,"SFXStreamNoiseSSS1",	0X29,	-1);
	add_enum_member(id,"SFXQuoteMissileGet",	0X2A,	-1);
	add_enum_member(id,"SFXComputerScreenOn",	0X2B,	-1);
	add_enum_member(id,"SFXMissileImpact",	0X2C,	-1);
	add_enum_member(id,"SFXEXPBounce",	0X2D,	-1);
	add_enum_member(id,"SFXIronHeadShot",	0X2E,	-1);
	add_enum_member(id,"SFXStrangeClick",	0X2F,	-1);
	add_enum_member(id,"SFXBubblerShoot",	0X30,	-1);
	add_enum_member(id,"SFXPolarStarShootLevel3",	0X31,	-1);
	add_enum_member(id,"SFXTorokoEnemySqueal",	0X32,	-1);
	add_enum_member(id,"SFXCritterSmallHurt",	0X33,	-1);
	add_enum_member(id,"SFXBehemothLargeHurt",	0X34,	-1);
	add_enum_member(id,"SFXGaudiDie",	0X35,	-1);
	add_enum_member(id,"SFXHeavyPressLargeObjectHurt",	0X36,	-1);
	add_enum_member(id,"SFXHighPitchedGaudiDie",	0X37,	-1);
	add_enum_member(id,"SFXWaterSplash",	0X38,	-1);
	add_enum_member(id,"SFXCurlyObjectHurt",	0X39,	-1);
	add_enum_member(id,"SFXHelicopterBladesSPS",	0X3A,	-1);
	add_enum_member(id,"SFXSpurChargeLevel1",	0X3B,	-1);
	add_enum_member(id,"SFXSpurChargeLevel2",	0X3C,	-1);
	add_enum_member(id,"SFXSpurChargeLevel3",	0X3D,	-1);
	add_enum_member(id,"SFXSpurShootLevel1",	0X3E,	-1);
	add_enum_member(id,"SFXSpurShootLevel2",	0X3F,	-1);
	add_enum_member(id,"SFXSpurShootLevel3",	0X40,	-1);
	add_enum_member(id,"SFXSpurChargeMAX",	0X41,	-1);
	add_enum_member(id,"SFXSilence37",	0X42,	-1);
	add_enum_member(id,"SFXSilence38",	0X43,	-1);
	add_enum_member(id,"SFXSilence39",	0X44,	-1);
	add_enum_member(id,"SFXSilence40",	0X45,	-1);
	add_enum_member(id,"SFXEnemySmokePoof",	0X46,	-1);
	add_enum_member(id,"SFXQuoteSmashIntoGround",	0X47,	-1);
	add_enum_member(id,"SFXExplosion",	0X48,	-1);
	add_enum_member(id,"SFXSilence41",	0X49,	-1);
	add_enum_member(id,"SFXSilence42",	0X4A,	-1);
	add_enum_member(id,"SFXSilence43",	0X4B,	-1);
	add_enum_member(id,"SFXSilence44",	0X4C,	-1);
	add_enum_member(id,"SFXSilence45",	0X4D,	-1);
	add_enum_member(id,"SFXSilence46",	0X4E,	-1);
	add_enum_member(id,"SFXSilence47",	0X4F,	-1);
	add_enum_member(id,"SFXSilence48",	0X50,	-1);
	add_enum_member(id,"SFXSilence49",	0X51,	-1);
	add_enum_member(id,"SFXSilence50",	0X52,	-1);
	add_enum_member(id,"SFXSilence51",	0X53,	-1);
	add_enum_member(id,"SFXSilence52",	0X54,	-1);
	add_enum_member(id,"SFXSilence53",	0X55,	-1);
	add_enum_member(id,"SFXSilence54",	0X56,	-1);
	add_enum_member(id,"SFXSilence55",	0X57,	-1);
	add_enum_member(id,"SFXSilence56",	0X58,	-1);
	add_enum_member(id,"SFXSilence57",	0X59,	-1);
	add_enum_member(id,"SFXSilence58",	0X5A,	-1);
	add_enum_member(id,"SFXSilence59",	0X5B,	-1);
	add_enum_member(id,"SFXSilence60",	0X5C,	-1);
	add_enum_member(id,"SFXSilence61",	0X5D,	-1);
	add_enum_member(id,"SFXSilence62",	0X5E,	-1);
	add_enum_member(id,"SFXSilence63",	0X5F,	-1);
	add_enum_member(id,"SFXSilence64",	0X60,	-1);
	add_enum_member(id,"SFXSilence65",	0X61,	-1);
	add_enum_member(id,"SFXSilence66",	0X62,	-1);
	add_enum_member(id,"SFXSilence67",	0X63,	-1);
	add_enum_member(id,"SFXBubblerShootLevel3",	0X64,	-1);
	add_enum_member(id,"SFXLightning",	0X65,	-1);
	add_enum_member(id,"SFXSandCroc",	0X66,	-1);
	add_enum_member(id,"SFXBallosBallAndCurlyChargingHerGun",	0X67,	-1);
	add_enum_member(id,"SFXSecretItemHurt",	0X68,	-1);
	add_enum_member(id,"SFXPuppyBark",	0X69,	-1);
	add_enum_member(id,"SFXSpinningProjectile",	0X6A,	-1);
	add_enum_member(id,"SFXBlockMove",	0X6B,	-1);
	add_enum_member(id,"SFXPowerCritterLargeEnemyJump",	0X6C,	-1);
	add_enum_member(id,"SFXCritterFly",	0X6D,	-1);
	add_enum_member(id,"SFXPowerCritterFlys",	0X6E,	-1);
	add_enum_member(id,"SFXThud",	0X6F,	-1);
	add_enum_member(id,"SFXLargeThud",	0X70,	-1);
	add_enum_member(id,"SFXBooster",	0X71,	-1);
	add_enum_member(id,"SFXCoreHurt",	0X72,	-1);
	add_enum_member(id,"SFXCoreThrust",	0X73,	-1);
	add_enum_member(id,"SFXCoreCharge",	0X74,	-1);
	add_enum_member(id,"SFXNemesisShot",	0X75,	-1);
	add_enum_member(id,"SFXSilence1",	0X76,	-1);
	add_enum_member(id,"SFXSilence2",	0X77,	-1);
	add_enum_member(id,"SFXSilence3",	0X78,	-1);
	add_enum_member(id,"SFXSilence4",	0X79,	-1);
	add_enum_member(id,"SFXSilence5",	0X7A,	-1);
	add_enum_member(id,"SFXSilence6",	0X7B,	-1);
	add_enum_member(id,"SFXSilence7",	0X7C,	-1);
	add_enum_member(id,"SFXSilence8",	0X7D,	-1);
	add_enum_member(id,"SFXSilence9",	0X7E,	-1);
	add_enum_member(id,"SFXSilence10",	0X7F,	-1);
	add_enum_member(id,"SFXSilence11",	0X80,	-1);
	add_enum_member(id,"SFXSilence12",	0X81,	-1);
	add_enum_member(id,"SFXSilence13",	0X82,	-1);
	add_enum_member(id,"SFXSilence14",	0X83,	-1);
	add_enum_member(id,"SFXSilence15",	0X84,	-1);
	add_enum_member(id,"SFXSilence16",	0X85,	-1);
	add_enum_member(id,"SFXSilence17",	0X86,	-1);
	add_enum_member(id,"SFXSilence18",	0X87,	-1);
	add_enum_member(id,"SFXSilence19",	0X88,	-1);
	add_enum_member(id,"SFXSilence20",	0X89,	-1);
	add_enum_member(id,"SFXSilence21",	0X8A,	-1);
	add_enum_member(id,"SFXSilence22",	0X8B,	-1);
	add_enum_member(id,"SFXSilence23",	0X8C,	-1);
	add_enum_member(id,"SFXSilence24",	0X8D,	-1);
	add_enum_member(id,"SFXSilence25",	0X8E,	-1);
	add_enum_member(id,"SFXSilence26",	0X8F,	-1);
	add_enum_member(id,"SFXSilence27",	0X90,	-1);
	add_enum_member(id,"SFXSilence28",	0X91,	-1);
	add_enum_member(id,"SFXSilence29",	0X92,	-1);
	add_enum_member(id,"SFXSilence30",	0X93,	-1);
	add_enum_member(id,"SFXSilence31",	0X94,	-1);
	add_enum_member(id,"SFXSilence32",	0X95,	-1);
	add_enum_member(id,"SFXBassBass01",	0X96,	-1);
	add_enum_member(id,"SFXSnareSnare01",	0X97,	-1);
	add_enum_member(id,"SFXHiCloseHiClose",	0X98,	-1);
	add_enum_member(id,"SFXHiOpenHiOpen",	0X99,	-1);
	add_enum_member(id,"SFXTomTom01",	0X9A,	-1);
	add_enum_member(id,"SFXPerPer01",	0X9B,	-1);
	add_enum_member(id,"SFXSilence33",	0X9C,	-1);
	add_enum_member(id,"SFXSilence34",	0X9D,	-1);
	add_enum_member(id,"SFXSilence35",	0X9E,	-1);
	add_enum_member(id,"SFXSilence36",	0X9F,	-1);
	add_enum_member(id,"SFXCrashesTheGame",	0XA0,	-1);
	id = add_enum(-1,"MACRO_IDM_COPY",0x2220000);
	add_enum_member(id,"IDM_COPY",	0XF,	-1);
	add_enum_member(id,"IDM_CUT",	0X10,	-1);
	add_enum_member(id,"IDM_PASTE",	0X1A,	-1);
	add_enum_member(id,"CMD_ZOOM_PAGEWIDTH",	0XFFFFFFFF,	-1);
	id = add_enum(-1,"MenuDialogMembers",0x1100000);
	add_enum_member(id,"buttonOK",	0X1,	-1);
	add_enum_member(id,"buttonYes",	0X1,	-1);
	add_enum_member(id,"buttonCancel",	0X2,	-1);
	add_enum_member(id,"buttonNo",	0X2,	-1);
	add_enum_member(id,"fieldSaveFile",	0X3F0,	-1);
	add_enum_member(id,"fieldQuitMessage",	0X3F1,	-1);
	add_enum_member(id,"buttonMute0",	0X3F2,	-1);
	add_enum_member(id,"fieldAboutMessage",	0X3F3,	-1);
	add_enum_member(id,"buttonMute1",	0X3FA,	-1);
	add_enum_member(id,"buttonMute2",	0X3FB,	-1);
	add_enum_member(id,"buttonMute3",	0X3FC,	-1);
	add_enum_member(id,"buttonMute4",	0X3FD,	-1);
	add_enum_member(id,"buttonMute5",	0X3FE,	-1);
	add_enum_member(id,"buttonMute6",	0X3FF,	-1);
	add_enum_member(id,"buttonMute7",	0X400,	-1);
	add_enum_member(id,"buttonQuit",	0X9C41,	-1);
	add_enum_member(id,"buttonVersion",	0X9C42,	-1);
	add_enum_member(id,"buttonVolume",	0X9C44,	-1);
	add_enum_member(id,"buttonDebugSave",	0X9C45,	-1);
	add_enum_member(id,"buttonMute",	0X9C47,	-1);
	id = add_enum(-1,"MACRO_DDBLT",0x1100000);
	set_enum_bf(id,1);
	add_enum_member(id,"DDBLT_ALPHADEST",	0X1,	0x1);
	add_enum_member(id,"DDBLT_ALPHADESTCONSTOVERRIDE",	0X2,	0x2);
	add_enum_member(id,"DDBLT_ALPHADESTNEG",	0X4,	0x4);
	add_enum_member(id,"DDBLT_ALPHADESTSURFACEOVERRIDE",	0X8,	0x8);
	add_enum_member(id,"DDBLT_ALPHAEDGEBLEND",	0X10,	0x10);
	add_enum_member(id,"DDBLT_ALPHASRC",	0X20,	0x20);
	add_enum_member(id,"DDBLT_ALPHASRCCONSTOVERRIDE",	0X40,	0x40);
	add_enum_member(id,"DDBLT_ALPHASRCNEG",	0X80,	0x80);
	add_enum_member(id,"DDBLT_ALPHASRCSURFACEOVERRIDE",	0X100,	0x100);
	add_enum_member(id,"DDBLT_ASYNC",	0X200,	0x200);
	add_enum_member(id,"DDBLT_COLORFILL",	0X400,	0x400);
	add_enum_member(id,"DDBLT_DDFX",	0X800,	0x800);
	add_enum_member(id,"DDBLT_DDROPS",	0X1000,	0x1000);
	add_enum_member(id,"DDBLT_KEYDEST",	0X2000,	0x2000);
	add_enum_member(id,"DDBLT_KEYDESTOVERRIDE",	0X4000,	0x4000);
	add_enum_member(id,"DDBLT_KEYSRC",	0X8000,	0x8000);
	add_enum_member(id,"DDBLT_KEYSRCOVERRIDE",	0X10000,	0x10000);
	add_enum_member(id,"DDBLT_ROP",	0X20000,	0x20000);
	add_enum_member(id,"DDBLT_ROTATIONANGLE",	0X40000,	0x40000);
	add_enum_member(id,"DDBLT_ZBUFFER",	0X80000,	0x80000);
	add_enum_member(id,"DDBLT_ZBUFFERDESTCONSTOVERRIDE",	0X100000,	0x100000);
	add_enum_member(id,"DDBLT_ZBUFFERDESTOVERRIDE",	0X200000,	0x200000);
	add_enum_member(id,"DDBLT_ZBUFFERSRCCONSTOVERRIDE",	0X400000,	0x400000);
	add_enum_member(id,"DDBLT_ZBUFFERSRCOVERRIDE",	0X800000,	0x800000);
	add_enum_member(id,"DDBLT_WAIT",	0X1000000,	0x1000000);
	add_enum_member(id,"DDBLT_DEPTHFILL",	0X2000000,	0x2000000);
	id = add_enum(-1,"MACRO_DDERR_OUTOFMEMORY",0x2220000);
	add_enum_member(id,"DDERR_OUTOFMEMORY",	0X8007000E,	-1);
	add_enum_member(id,"DDERR_OUTOFVIDEOMEMORY",	0X8876017C,	-1);
	add_enum_member(id,"DDERR_OVERLAYCANTCLIP",	0X8876017E,	-1);
	add_enum_member(id,"DDERR_OVERLAYCOLORKEYONLYONEACTIVE",	0X88760180,	-1);
	add_enum_member(id,"DDERR_PALETTEBUSY",	0X88760183,	-1);
	add_enum_member(id,"DDERR_COLORKEYNOTSET",	0X88760190,	-1);
	add_enum_member(id,"DDERR_SURFACEALREADYATTACHED",	0X8876019A,	-1);
	add_enum_member(id,"DDERR_SURFACEALREADYDEPENDENT",	0X887601A4,	-1);
	add_enum_member(id,"DDERR_SURFACEBUSY",	0X887601AE,	-1);
	add_enum_member(id,"DDERR_CANTLOCKSURFACE",	0X887601B3,	-1);
	add_enum_member(id,"DDERR_SURFACEISOBSCURED",	0X887601B8,	-1);
	add_enum_member(id,"DDERR_SURFACELOST",	0X887601C2,	-1);
	add_enum_member(id,"DDERR_SURFACENOTATTACHED",	0X887601CC,	-1);
	add_enum_member(id,"DDERR_TOOBIGHEIGHT",	0X887601D6,	-1);
	add_enum_member(id,"DDERR_TOOBIGSIZE",	0X887601E0,	-1);
	add_enum_member(id,"DDERR_TOOBIGWIDTH",	0X887601EA,	-1);
	id = add_enum(-1,"MACRO_DDSCL",0x1100000);
	set_enum_bf(id,1);
	add_enum_member(id,"DDSCL_FULLSCREEN",	0X1,	0x1);
	add_enum_member(id,"DDSCL_ALLOWREBOOT",	0X2,	0x2);
	add_enum_member(id,"DDSCL_NOWINDOWCHANGES",	0X4,	0x4);
	add_enum_member(id,"DDSCL_NORMAL",	0X8,	0x8);
	add_enum_member(id,"DDSCL_EXCLUSIVE",	0X10,	0x10);
	add_enum_member(id,"DDSCL_ALLOWMODEX",	0X40,	0x40);
	add_enum_member(id,"DDSCL_SETFOCUSWINDOW",	0X80,	0x80);
	add_enum_member(id,"DDSCL_SETDEVICEWINDOW",	0X100,	0x100);
	add_enum_member(id,"DDSCL_CREATEDEVICEWINDOW",	0X200,	0x200);
	id = add_enum(-1,"InitDirectDraw_Modes",0x1100000);
	add_enum_member(id,"mode320_40Windowed",	0,	-1);
	add_enum_member(id,"mode640480Windowed",	0X1,	-1);
	add_enum_member(id,"modeFullscreen",	0X2,	-1);
	id = add_enum(-1,"DisplayModes",0x1100000);
	add_enum_member(id,"displayFullScreen",	0,	-1);
	add_enum_member(id,"display320240Windowed",	0X1,	-1);
	add_enum_member(id,"display640480Windowed",	0X2,	-1);
	add_enum_member(id,"displayFull24Bit",	0X3,	-1);
	add_enum_member(id,"displayFull32Bit",	0X4,	-1);
	id = add_enum(-1,"MACRO_DDSD",0x1100000);
	add_enum_member(id,"DDSD_CAPS",	0X1,	-1);
	add_enum_member(id,"DDSD_HEIGHT",	0X2,	-1);
	add_enum_member(id,"DDSD_WIDTH",	0X4,	-1);
	add_enum_member(id,"DDSD_PITCH",	0X8,	-1);
	add_enum_member(id,"DDSD_BACKBUFFERCOUNT",	0X20,	-1);
	add_enum_member(id,"DDSD_ZBUFFERBITDEPTH",	0X40,	-1);
	add_enum_member(id,"DDSD_ALPHABITDEPTH",	0X80,	-1);
	add_enum_member(id,"DDSD_LPSURFACE",	0X800,	-1);
	add_enum_member(id,"DDSD_PIXELFORMAT",	0X1000,	-1);
	add_enum_member(id,"DDSD_CKDESTOVERLAY",	0X2000,	-1);
	add_enum_member(id,"DDSD_CKDESTBLT",	0X4000,	-1);
	add_enum_member(id,"DDSD_CKSRCOVERLAY",	0X8000,	-1);
	add_enum_member(id,"DDSD_CKSRCBLT",	0X10000,	-1);
	add_enum_member(id,"DDSD_MIPMAPCOUNT",	0X20000,	-1);
	add_enum_member(id,"DDSD_REFRESHRATE",	0X40000,	-1);
	add_enum_member(id,"DDSD_LINEARSIZE",	0X80000,	-1);
	add_enum_member(id,"DDSD_ALL",	0XFF9EE,	-1);
	id = add_enum(-1,"MACRO_WSA_WAIT",0x2220000);
	add_enum_member(id,"WSA_WAIT_EVENT_0",	0,	-1);
	add_enum_member(id,"WSA_WAIT_TIMEOUT",	0X102,	-1);
	add_enum_member(id,"WSA_INFINITE",	0XFFFFFFFF,	-1);
	id = add_enum(-1,"MACRO_WS",0x1100000);
	add_enum_member(id,"WS_OVERLAPPED",	0,	-1);
	add_enum_member(id,"WS_TILED",	0,	-1);
	add_enum_member(id,"WS_TABSTOP",	0X10000,	-1);
	add_enum_member(id,"WS_MAXIMIZEBOX",	0X10000,	-1);
	add_enum_member(id,"WS_GROUP",	0X20000,	-1);
	add_enum_member(id,"WS_MINIMIZEBOX",	0X20000,	-1);
	add_enum_member(id,"WS_THICKFRAME",	0X40000,	-1);
	add_enum_member(id,"WS_SIZEBOX",	0X40000,	-1);
	add_enum_member(id,"WS_SYSMENU",	0X80000,	-1);
	add_enum_member(id,"WS_HSCROLL",	0X100000,	-1);
	add_enum_member(id,"WS_VSCROLL",	0X200000,	-1);
	add_enum_member(id,"WS_DLGFRAME",	0X400000,	-1);
	add_enum_member(id,"WS_BORDER",	0X800000,	-1);
	add_enum_member(id,"WS_CAPTION",	0XC00000,	-1);
	add_enum_member(id,"WS_OVERLAPPEDWINDOW",	0XCF0000,	-1);
	add_enum_member(id,"WS_MAXIMIZE",	0X1000000,	-1);
	add_enum_member(id,"WS_CLIPCHILDREN",	0X2000000,	-1);
	add_enum_member(id,"WS_CLIPSIBLINGS",	0X4000000,	-1);
	add_enum_member(id,"WS_DISABLED",	0X8000000,	-1);
	add_enum_member(id,"WS_VISIBLE",	0X10000000,	-1);
	add_enum_member(id,"WS_MINIMIZE",	0X20000000,	-1);
	add_enum_member(id,"WS_ICONIC",	0X20000000,	-1);
	add_enum_member(id,"WS_CHILD",	0X40000000,	-1);
	add_enum_member(id,"WS_CHILDWINDOW",	0X40000000,	-1);
	add_enum_member(id,"WS_POPUP",	0X80000000,	-1);
	add_enum_member(id,"WS_POPUPWINDOW",	0X80880000,	-1);
	id = add_enum(-1,"MACRO_DDSCAPS",0x1100000);
	set_enum_bf(id,1);
	add_enum_member(id,"DDSCAPS_RESERVED1",	0X1,	0x1);
	add_enum_member(id,"DDSCAPS_ALPHA",	0X2,	0x2);
	add_enum_member(id,"DDSCAPS_BACKBUFFER",	0X4,	0x4);
	add_enum_member(id,"DDSCAPS_COMPLEX",	0X8,	0x8);
	add_enum_member(id,"DDSCAPS_FLIP",	0X10,	0x10);
	add_enum_member(id,"DDSCAPS_FRONTBUFFER",	0X20,	0x20);
	add_enum_member(id,"DDSCAPS_OFFSCREENPLAIN",	0X40,	0x40);
	add_enum_member(id,"DDSCAPS_OVERLAY",	0X80,	0x80);
	add_enum_member(id,"DDSCAPS_PALETTE",	0X100,	0x100);
	add_enum_member(id,"DDSCAPS_PRIMARYSURFACE",	0X200,	0x200);
	add_enum_member(id,"DDSCAPS_PRIMARYSURFACELEFT",	0X400,	0x400);
	add_enum_member(id,"DDSCAPS_SYSTEMMEMORY",	0X800,	0x800);
	add_enum_member(id,"DDSCAPS_TEXTURE",	0X1000,	0x1000);
	add_enum_member(id,"DDSCAPS_3DDEVICE",	0X2000,	0x2000);
	add_enum_member(id,"DDSCAPS_VIDEOMEMORY",	0X4000,	0x4000);
	add_enum_member(id,"DDSCAPS_VISIBLE",	0X8000,	0x8000);
	add_enum_member(id,"DDSCAPS_WRITEONLY",	0X10000,	0x10000);
	add_enum_member(id,"DDSCAPS_ZBUFFER",	0X20000,	0x20000);
	add_enum_member(id,"DDSCAPS_OWNDC",	0X40000,	0x40000);
	add_enum_member(id,"DDSCAPS_LIVEVIDEO",	0X80000,	0x80000);
	add_enum_member(id,"DDSCAPS_HWCODEC",	0X100000,	0x100000);
	add_enum_member(id,"DDSCAPS_MODEX",	0X200000,	0x200000);
	add_enum_member(id,"DDSCAPS_MIPMAP",	0X400000,	0x400000);
	add_enum_member(id,"DDSCAPS_RESERVED2",	0X800000,	0x800000);
	add_enum_member(id,"DDSCAPS_ALLOCONLOAD",	0X4000000,	0x4000000);
	add_enum_member(id,"DDSCAPS_VIDEOPORT",	0X8000000,	0x8000000);
	add_enum_member(id,"DDSCAPS_LOCALVIDMEM",	0X10000000,	0x10000000);
	add_enum_member(id,"DDSCAPS_NONLOCALVIDMEM",	0X20000000,	0x20000000);
	add_enum_member(id,"DDSCAPS_STANDARDVGAMODE",	0X40000000,	0x40000000);
	add_enum_member(id,"DDSCAPS_OPTIMIZED",	0X80000000,	0x80000000);
	id = add_enum(-1,"MACRO_R2_LAST",0x2220000);
	add_enum_member(id,"R2_LAST",	0X10,	-1);
	add_enum_member(id,"SRCCOPY",	0XCC0020,	-1);
	add_enum_member(id,"SRCPAINT",	0XEE0086,	-1);
	id = add_enum(-1,"MACRO_FILE_SHARE",0x2220000);
	set_enum_bf(id,1);
	add_enum_member(id,"FILE_SHARE_READ",	0X1,	0x1);
	add_enum_member(id,"FILE_SHARE_WRITE",	0X2,	0x2);
	add_enum_member(id,"FILE_SHARE_DELETE",	0X4,	0x4);
	id = add_enum(-1,"MACRO_CREATE",0x2220000);
	add_enum_member(id,"CREATE_NEW",	0X1,	-1);
	add_enum_member(id,"CREATE_ALWAYS",	0X2,	-1);
	add_enum_member(id,"OPEN_EXISTING",	0X3,	-1);
	add_enum_member(id,"OPEN_ALWAYS",	0X4,	-1);
	add_enum_member(id,"TRUNCATE_EXISTING",	0X5,	-1);
	id = add_enum(-1,"MACRO_FILE_ATTRIBUTE",0x1100000);
	set_enum_bf(id,1);
	add_enum_member(id,"FILE_ATTRIBUTE_READONLY",	0X1,	0x1);
	add_enum_member(id,"FILE_ATTRIBUTE_HIDDEN",	0X2,	0x2);
	add_enum_member(id,"FILE_ATTRIBUTE_SYSTEM",	0X4,	0x4);
	add_enum_member(id,"FILE_ATTRIBUTE_DIRECTORY",	0X10,	0x10);
	add_enum_member(id,"FILE_ATTRIBUTE_ARCHIVE",	0X20,	0x20);
	add_enum_member(id,"FILE_ATTRIBUTE_ENCRYPTED",	0X40,	0x40);
	add_enum_member(id,"FILE_ATTRIBUTE_NORMAL",	0X80,	0x80);
	add_enum_member(id,"FILE_ATTRIBUTE_TEMPORARY",	0X100,	0x100);
	add_enum_member(id,"FILE_ATTRIBUTE_SPARSE_FILE",	0X200,	0x200);
	add_enum_member(id,"FILE_ATTRIBUTE_REPARSE_POINT",	0X400,	0x400);
	add_enum_member(id,"FILE_ATTRIBUTE_COMPRESSED",	0X800,	0x800);
	add_enum_member(id,"FILE_ATTRIBUTE_OFFLINE",	0X1000,	0x1000);
	add_enum_member(id,"FILE_ATTRIBUTE_NOT_CONTENT_INDEXED",	0X2000,	0x2000);
	id = add_enum(-1,"MACRO_DIERR_NOAGGREGATION",0x2220000);
	add_enum_member(id,"DIERR_NOAGGREGATION",	0X80040110,	-1);
	add_enum_member(id,"DIERR_OTHERAPPHASPRIO",	0X80070005,	-1);
	add_enum_member(id,"DIERR_INPUTLOST",	0X8007001E,	-1);
	add_enum_member(id,"DIERR_ACQUIRED",	0X800700AA,	-1);
	id = add_enum(-1,"weapons",0x1100000);
	add_enum_member(id,"weaponSnake",	0X1,	-1);
	add_enum_member(id,"weaponPolarStar",	0X2,	-1);
	add_enum_member(id,"weaponFireball",	0X3,	-1);
	add_enum_member(id,"weaponMachineGun",	0X4,	-1);
	add_enum_member(id,"weaponMissileLauncher",	0X5,	-1);
	add_enum_member(id,"weaponBubbler",	0X7,	-1);
	add_enum_member(id,"weaponBlade",	0X9,	-1);
	add_enum_member(id,"weaponNemesis",	0XC,	-1);
	add_enum_member(id,"weaponSpur",	0XD,	-1);
	return id;
}

//------------------------------------------------------------------------
// Information about enum types

static Enums(void) {
        auto id;
        begin_type_updating(UTP_ENUM);
	id = Enums_0(id);
        end_type_updating(UTP_ENUM);
}

static ApplyStrucTInfos_0(void) {
        auto id;
	id = get_struc_id("FILETIME");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "DWORD");
	id = get_struc_id("configDataFile");
	SetType(get_member_id(id, 0x0), "char[32]");
	SetType(get_member_id(id, 0x20), "char[64]");
	SetType(get_member_id(id, 0x60), "int");
	SetType(get_member_id(id, 0x64), "int");
	SetType(get_member_id(id, 0x68), "int");
	SetType(get_member_id(id, 0x6C), "int");
	SetType(get_member_id(id, 0x70), "int");
	SetType(get_member_id(id, 0x74), "int[8]");
	id = get_struc_id("SYSTEMTIME");
	SetType(get_member_id(id, 0x0), "WORD");
	SetType(get_member_id(id, 0x2), "WORD");
	SetType(get_member_id(id, 0x4), "WORD");
	SetType(get_member_id(id, 0x6), "WORD");
	SetType(get_member_id(id, 0x8), "WORD");
	SetType(get_member_id(id, 0xA), "WORD");
	SetType(get_member_id(id, 0xC), "WORD");
	SetType(get_member_id(id, 0xE), "WORD");
	id = get_struc_id("_SYSTEMTIME");
	SetType(get_member_id(id, 0x0), "WORD");
	SetType(get_member_id(id, 0x2), "WORD");
	SetType(get_member_id(id, 0x4), "WORD");
	SetType(get_member_id(id, 0x6), "WORD");
	SetType(get_member_id(id, 0x8), "WORD");
	SetType(get_member_id(id, 0xA), "WORD");
	SetType(get_member_id(id, 0xC), "WORD");
	SetType(get_member_id(id, 0xE), "WORD");
	id = get_struc_id("_SYSTEM_INFO::$41710344DA04EC56A327D4EA11DEF6D2::$AA04DEB0C6383F89F13D312A174572A9");
	SetType(get_member_id(id, 0x0), "WORD");
	SetType(get_member_id(id, 0x2), "WORD");
	id = get_struc_id("_SYSTEM_INFO::$41710344DA04EC56A327D4EA11DEF6D2");
	SetType(get_member_id(id, 0x0), "SYSTEMTIME");
	id = get_struc_id("_SYSTEM_INFO");
	SetType(get_member_id(id, 0x0), "union _SYSTEM_INFO::$41710344DA04EC56A327D4EA11DEF6D2");
	SetType(get_member_id(id, 0x4), "DWORD");
	SetType(get_member_id(id, 0x8), "LPVOID");
	SetType(get_member_id(id, 0xC), "LPVOID");
	SetType(get_member_id(id, 0x10), "DWORD");
	SetType(get_member_id(id, 0x14), "DWORD");
	SetType(get_member_id(id, 0x18), "DWORD");
	SetType(get_member_id(id, 0x1C), "DWORD");
	SetType(get_member_id(id, 0x20), "WORD");
	SetType(get_member_id(id, 0x22), "WORD");
	id = get_struc_id("FILE");
	SetType(get_member_id(id, 0x0), "char *");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "char *");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "int");
	SetType(get_member_id(id, 0x14), "int");
	SetType(get_member_id(id, 0x18), "int");
	SetType(get_member_id(id, 0x1C), "char *");
	id = get_struc_id("_LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "LONG");
	id = get_struc_id("LARGE_INTEGER");
	SetType(get_member_id(id, 0x0), "LONGLONG");
	id = get_struc_id("_FILETIME");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "DWORD");
	id = get_struc_id("_cpinfo");
	SetType(get_member_id(id, 0x0), "UINT");
	SetType(get_member_id(id, 0x4), "BYTE[2]");
	SetType(get_member_id(id, 0x6), "BYTE[12]");
	id = get_struc_id("_SECURITY_ATTRIBUTES");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "LPVOID");
	SetType(get_member_id(id, 0x8), "BOOL");
	id = get_struc_id("_MEMORY_BASIC_INFORMATION");
	SetType(get_member_id(id, 0x0), "PVOID");
	SetType(get_member_id(id, 0x4), "PVOID");
	SetType(get_member_id(id, 0x8), "DWORD");
	SetType(get_member_id(id, 0xC), "SIZE_T");
	SetType(get_member_id(id, 0x10), "DWORD");
	SetType(get_member_id(id, 0x14), "DWORD");
	SetType(get_member_id(id, 0x18), "DWORD");
	id = get_struc_id("_STARTUPINFOA");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "LPSTR");
	SetType(get_member_id(id, 0x8), "LPSTR");
	SetType(get_member_id(id, 0xC), "LPSTR");
	SetType(get_member_id(id, 0x10), "DWORD");
	SetType(get_member_id(id, 0x14), "DWORD");
	SetType(get_member_id(id, 0x18), "DWORD");
	SetType(get_member_id(id, 0x1C), "DWORD");
	SetType(get_member_id(id, 0x20), "DWORD");
	SetType(get_member_id(id, 0x24), "DWORD");
	SetType(get_member_id(id, 0x28), "DWORD");
	SetType(get_member_id(id, 0x2C), "DWORD");
	SetType(get_member_id(id, 0x30), "WORD");
	SetType(get_member_id(id, 0x32), "WORD");
	SetType(get_member_id(id, 0x34), "LPBYTE");
	SetType(get_member_id(id, 0x38), "HANDLE");
	SetType(get_member_id(id, 0x3C), "HANDLE");
	SetType(get_member_id(id, 0x40), "HANDLE");
	id = get_struc_id("timecaps_tag");
	SetType(get_member_id(id, 0x0), "UINT");
	SetType(get_member_id(id, 0x4), "UINT");
	id = get_struc_id("MSG");
	SetType(get_member_id(id, 0x0), "HWND");
	SetType(get_member_id(id, 0x4), "UINT");
	SetType(get_member_id(id, 0x8), "WPARAM");
	SetType(get_member_id(id, 0xC), "LPARAM");
	SetType(get_member_id(id, 0x10), "DWORD");
	SetType(get_member_id(id, 0x14), "WNDCLASSEXA");
	id = get_struc_id("tagMSG");
	SetType(get_member_id(id, 0x0), "HWND");
	SetType(get_member_id(id, 0x4), "UINT");
	SetType(get_member_id(id, 0x8), "WPARAM");
	SetType(get_member_id(id, 0xC), "LPARAM");
	SetType(get_member_id(id, 0x10), "DWORD");
	SetType(get_member_id(id, 0x14), "WNDCLASSEXA");
	id = get_struc_id("WNDCLASSEXA");
	SetType(get_member_id(id, 0x0), "UINT");
	SetType(get_member_id(id, 0x4), "UINT");
	SetType(get_member_id(id, 0x8), "WNDPROC");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "int");
	SetType(get_member_id(id, 0x14), "HINSTANCE");
	SetType(get_member_id(id, 0x18), "HICON");
	SetType(get_member_id(id, 0x1C), "HCURSOR");
	SetType(get_member_id(id, 0x20), "HBRUSH");
	SetType(get_member_id(id, 0x24), "LPCSTR");
	SetType(get_member_id(id, 0x28), "LPCSTR");
	SetType(get_member_id(id, 0x2C), "HICON");
	id = get_struc_id("RECT");
	SetType(get_member_id(id, 0x0), "LONG");
	SetType(get_member_id(id, 0x4), "LONG");
	SetType(get_member_id(id, 0x8), "LONG");
	SetType(get_member_id(id, 0xC), "LONG");
	id = get_struc_id("POINT");
	SetType(get_member_id(id, 0x0), "LONG");
	SetType(get_member_id(id, 0x4), "LONG");
	id = get_struc_id("WINDOWPLACEMENT");
	SetType(get_member_id(id, 0x0), "UINT");
	SetType(get_member_id(id, 0x4), "UINT");
	SetType(get_member_id(id, 0x8), "UINT");
	SetType(get_member_id(id, 0xC), "WNDCLASSEXA");
	SetType(get_member_id(id, 0x14), "WNDCLASSEXA");
	id = get_struc_id("tagRECT");
	SetType(get_member_id(id, 0x0), "LONG");
	SetType(get_member_id(id, 0x4), "LONG");
	SetType(get_member_id(id, 0x8), "LONG");
	SetType(get_member_id(id, 0xC), "LONG");
	id = get_struc_id("CPPEH_RECORD");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "EXCEPTION_POINTERS *");
	SetType(get_member_id(id, 0x8), "struct _EH3_EXCEPTION_REGISTRATION");
	id = get_struc_id("_msEH");
	id = get_struc_id("struct_0");
	id = get_struc_id("_EH3_EXCEPTION_REGISTRATION");
	SetType(get_member_id(id, 0x0), "struct _EH3_EXCEPTION_REGISTRATION *");
	SetType(get_member_id(id, 0x4), "PVOID");
	SetType(get_member_id(id, 0x8), "PSCOPETABLE_ENTRY");
	SetType(get_member_id(id, 0xC), "DWORD");
	id = get_struc_id("_SCOPETABLE_ENTRY");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "void *");
	SetType(get_member_id(id, 0x8), "void *");
	id = get_struc_id("IDirectDraw");
	SetType(get_member_id(id, 0x0), "IDirectDrawVtbl *");
	id = get_struc_id("NPCInfo");
	SetType(get_member_id(id, 0x0), "__int16");
	SetType(get_member_id(id, 0x2), "__int16");
	SetType(get_member_id(id, 0x4), "__int8");
	SetType(get_member_id(id, 0x5), "__int8");
	SetType(get_member_id(id, 0x6), "__int8");
	SetType(get_member_id(id, 0x7), "__int8");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "someRectThing");
	SetType(get_member_id(id, 0x14), "someRectThing");
	id = get_struc_id("someRectThing");
	SetType(get_member_id(id, 0x0), "char");
	SetType(get_member_id(id, 0x1), "char");
	SetType(get_member_id(id, 0x2), "char");
	SetType(get_member_id(id, 0x3), "char");
	id = get_struc_id("MapData");
	SetType(get_member_id(id, 0x0), "unsigned __int8 *");
	SetType(get_member_id(id, 0x4), "unsigned __int8[257]");
	SetType(get_member_id(id, 0x106), "__int16");
	SetType(get_member_id(id, 0x108), "__int16");
	id = get_struc_id("NPC");
	SetType(get_member_id(id, 0x0), "unsigned __int8");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "int");
	SetType(get_member_id(id, 0x14), "int");
	SetType(get_member_id(id, 0x18), "int");
	SetType(get_member_id(id, 0x1C), "int");
	SetType(get_member_id(id, 0x20), "int");
	SetType(get_member_id(id, 0x24), "int");
	SetType(get_member_id(id, 0x28), "int");
	SetType(get_member_id(id, 0x2C), "int");
	SetType(get_member_id(id, 0x30), "int");
	SetType(get_member_id(id, 0x34), "int");
	SetType(get_member_id(id, 0x38), "int");
	SetType(get_member_id(id, 0x3C), "int");
	SetType(get_member_id(id, 0x40), "int");
	SetType(get_member_id(id, 0x44), "int");
	SetType(get_member_id(id, 0x48), "int");
	SetType(get_member_id(id, 0x4C), "int");
	SetType(get_member_id(id, 0x50), "unsigned __int16");
	SetType(get_member_id(id, 0x54), "RECT");
	SetType(get_member_id(id, 0x64), "int");
	SetType(get_member_id(id, 0x68), "int");
	SetType(get_member_id(id, 0x6C), "int");
	SetType(get_member_id(id, 0x70), "int");
	SetType(get_member_id(id, 0x74), "int");
	SetType(get_member_id(id, 0x78), "int");
	SetType(get_member_id(id, 0x7C), "NPCCollisionFlags");
	SetType(get_member_id(id, 0x8C), "NPCCollisionFlags");
	SetType(get_member_id(id, 0x9C), "unsigned __int8");
	SetType(get_member_id(id, 0xA0), "int");
	SetType(get_member_id(id, 0xA4), "int");
	SetType(get_member_id(id, 0xA8), "NPC *");
	id = get_struc_id("NPCCollisionFlags");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int");
	id = get_struc_id("Effect");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "Directions");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "int");
	SetType(get_member_id(id, 0x14), "int");
	SetType(get_member_id(id, 0x18), "int");
	SetType(get_member_id(id, 0x1C), "int");
	SetType(get_member_id(id, 0x20), "int");
	SetType(get_member_id(id, 0x24), "int");
	SetType(get_member_id(id, 0x28), "int");
	SetType(get_member_id(id, 0x2C), "int");
	SetType(get_member_id(id, 0x30), "int");
	SetType(get_member_id(id, 0x34), "RECT");
	id = get_struc_id("FadeVars");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "bool");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "char[15][20]");
	SetType(get_member_id(id, 0x138), "char[15][20]");
	SetType(get_member_id(id, 0x264), "char");
	id = get_struc_id("_tiddata");
	SetType(get_member_id(id, 0x0), "_BYTE[20]");
	SetType(get_member_id(id, 0x14), "_DWORD");
	id = get_struc_id("Player");
	SetType(get_member_id(id, 0x0), "unsigned __int8");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "Directions");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "int");
	SetType(get_member_id(id, 0x14), "BOOL");
	SetType(get_member_id(id, 0x18), "int");
	SetType(get_member_id(id, 0x1C), "int");
	SetType(get_member_id(id, 0x20), "int");
	SetType(get_member_id(id, 0x24), "int");
	SetType(get_member_id(id, 0x28), "int");
	SetType(get_member_id(id, 0x2C), "int");
	SetType(get_member_id(id, 0x30), "int");
	SetType(get_member_id(id, 0x34), "int");
	SetType(get_member_id(id, 0x38), "int");
	SetType(get_member_id(id, 0x3C), "int");
	SetType(get_member_id(id, 0x40), "int");
	SetType(get_member_id(id, 0x44), "NPCCollisionFlags");
	SetType(get_member_id(id, 0x54), "NPCCollisionFlags");
	SetType(get_member_id(id, 0x64), "RECT");
	SetType(get_member_id(id, 0x74), "RECT");
	SetType(get_member_id(id, 0x84), "int");
	SetType(get_member_id(id, 0x88), "int");
	SetType(get_member_id(id, 0x8C), "int");
	SetType(get_member_id(id, 0x90), "unsigned __int8");
	SetType(get_member_id(id, 0x91), "unsigned __int8");
	SetType(get_member_id(id, 0x92), "unsigned __int8");
	SetType(get_member_id(id, 0x93), "unsigned __int8");
	SetType(get_member_id(id, 0x94), "__int16");
	SetType(get_member_id(id, 0x96), "__int16");
	SetType(get_member_id(id, 0x98), "__int16");
	SetType(get_member_id(id, 0x9A), "__int16");
	SetType(get_member_id(id, 0x9C), "int");
	SetType(get_member_id(id, 0xA0), "int");
	SetType(get_member_id(id, 0xA4), "int");
	SetType(get_member_id(id, 0xA8), "int");
	SetType(get_member_id(id, 0xAC), "char");
	SetType(get_member_id(id, 0xAD), "char");
	SetType(get_member_id(id, 0xAE), "char");
	SetType(get_member_id(id, 0xB0), "int");
	id = get_struc_id("Weapon");
	SetType(get_member_id(id, 0x0), "weapons");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "int");
	id = get_struc_id("FlashAnimation");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "int");
	SetType(get_member_id(id, 0x14), "int");
	SetType(get_member_id(id, 0x18), "int");
	SetType(get_member_id(id, 0x1C), "RECT");
	SetType(get_member_id(id, 0x2C), "RECT");
	id = get_struc_id("MapHeader");
	SetType(get_member_id(id, 0x0), "char[32]");
	SetType(get_member_id(id, 0x20), "char[32]");
	SetType(get_member_id(id, 0x40), "int");
	SetType(get_member_id(id, 0x44), "char[32]");
	SetType(get_member_id(id, 0x64), "char[32]");
	SetType(get_member_id(id, 0x84), "char[32]");
	SetType(get_member_id(id, 0xA4), "char");
	SetType(get_member_id(id, 0xA5), "char[32]");
	id = get_struc_id("MapData2");
	SetType(get_member_id(id, 0x0), "char[260]");
	SetType(get_member_id(id, 0x104), "int");
	SetType(get_member_id(id, 0x108), "char *");
	SetType(get_member_id(id, 0x10C), "char");
	SetType(get_member_id(id, 0x10D), "char");
	SetType(get_member_id(id, 0x110), "int");
	SetType(get_member_id(id, 0x114), "int");
	SetType(get_member_id(id, 0x118), "int");
	SetType(get_member_id(id, 0x11C), "int[4]");
	SetType(get_member_id(id, 0x12C), "int");
	SetType(get_member_id(id, 0x130), "int");
	SetType(get_member_id(id, 0x134), "int");
	SetType(get_member_id(id, 0x138), "char");
	SetType(get_member_id(id, 0x13C), "int");
	SetType(get_member_id(id, 0x140), "int");
	SetType(get_member_id(id, 0x144), "int");
	SetType(get_member_id(id, 0x148), "int");
	SetType(get_member_id(id, 0x14C), "RECT");
	SetType(get_member_id(id, 0x15C), "int");
	SetType(get_member_id(id, 0x160), "unsigned __int8");
	id = get_struc_id("Background");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "int");
	SetType(get_member_id(id, 0x14), "int");
	SetType(get_member_id(id, 0x18), "int");
	SetType(get_member_id(id, 0x1C), "char[12]");
	id = get_struc_id("camera");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int *");
	SetType(get_member_id(id, 0xC), "int *");
	SetType(get_member_id(id, 0x10), "int");
	SetType(get_member_id(id, 0x14), "int");
	SetType(get_member_id(id, 0x18), "int");
	id = get_struc_id("WeaponEXPValues");
	SetType(get_member_id(id, 0x0), "int[3]");
	id = get_struc_id("ItemData");
	SetType(get_member_id(id, 0x0), "int");
	id = get_struc_id("HellTimeFile");
	SetType(get_member_id(id, 0x0), "int[4]");
	SetType(get_member_id(id, 0x10), "unsigned __int8[4]");
	id = get_struc_id("MapName");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "char[32]");
	id = get_struc_id("Boss");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "int *");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "int");
	id = get_struc_id("ProfileFile");
	SetType(get_member_id(id, 0x0), "char[8]");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "int");
	SetType(get_member_id(id, 0x14), "int");
	SetType(get_member_id(id, 0x18), "int");
	SetType(get_member_id(id, 0x1C), "__int16");
	SetType(get_member_id(id, 0x1E), "__int16");
	SetType(get_member_id(id, 0x20), "__int16");
	SetType(get_member_id(id, 0x22), "__int16");
	SetType(get_member_id(id, 0x24), "int");
	SetType(get_member_id(id, 0x28), "int");
	SetType(get_member_id(id, 0x2C), "int");
	SetType(get_member_id(id, 0x30), "int");
	SetType(get_member_id(id, 0x34), "int");
	SetType(get_member_id(id, 0x38), "Weapon[8]");
	SetType(get_member_id(id, 0xD8), "ItemData[32]");
	SetType(get_member_id(id, 0x158), "PermitStageStruct[8]");
	SetType(get_member_id(id, 0x198), "char[128]");
	SetType(get_member_id(id, 0x218), "char[4]");
	SetType(get_member_id(id, 0x21C), "unsigned __int8[1000]");
	id = get_struc_id("PermitStageStruct");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "int");
	id = get_struc_id("TSCStruct");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "char *");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "int");
	SetType(get_member_id(id, 0x14), "int");
	id = get_struc_id("Illustration");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "int");
	id = get_struc_id("TextObject");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "char[64]");
	id = get_struc_id("Position");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "int");
	id = get_struc_id("Bullet");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "int");
	SetType(get_member_id(id, 0x14), "int");
	SetType(get_member_id(id, 0x18), "int");
	SetType(get_member_id(id, 0x1C), "int");
	SetType(get_member_id(id, 0x20), "int");
	SetType(get_member_id(id, 0x24), "int");
	SetType(get_member_id(id, 0x28), "int");
	SetType(get_member_id(id, 0x2C), "int");
	SetType(get_member_id(id, 0x30), "int");
	SetType(get_member_id(id, 0x34), "int");
	SetType(get_member_id(id, 0x38), "unsigned __int8");
	SetType(get_member_id(id, 0x3C), "RECT");
	SetType(get_member_id(id, 0x4C), "int");
	SetType(get_member_id(id, 0x50), "int");
	SetType(get_member_id(id, 0x54), "int");
	SetType(get_member_id(id, 0x58), "int");
	SetType(get_member_id(id, 0x5C), "int");
	SetType(get_member_id(id, 0x60), "int");
	SetType(get_member_id(id, 0x64), "int");
	SetType(get_member_id(id, 0x68), "int");
	SetType(get_member_id(id, 0x6C), "int");
	SetType(get_member_id(id, 0x70), "NPCCollisionFlags");
	id = get_struc_id("DSBUFFERDESC");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "DWORD");
	SetType(get_member_id(id, 0x8), "DWORD");
	SetType(get_member_id(id, 0xC), "DWORD");
	SetType(get_member_id(id, 0x10), "LPWAVEFORMATEX");
	id = get_struc_id("OCTWAVE");
	SetType(get_member_id(id, 0x0), "__int16");
	SetType(get_member_id(id, 0x2), "__int16");
	SetType(get_member_id(id, 0x4), "__int16");
	id = get_struc_id("IDirectSoundBufferVtbl");
	SetType(get_member_id(id, 0x0), "void (__cdecl *)()");
	SetType(get_member_id(id, 0x4), "void (__cdecl *)()");
	SetType(get_member_id(id, 0x8), "void (__cdecl *)(_DWORD)");
	SetType(get_member_id(id, 0xC), "void (__cdecl *)()");
	SetType(get_member_id(id, 0x10), "void (__cdecl *)()");
	SetType(get_member_id(id, 0x14), "void (__cdecl *)()");
	SetType(get_member_id(id, 0x18), "void (__cdecl *)()");
	SetType(get_member_id(id, 0x1C), "void (__cdecl *)()");
	SetType(get_member_id(id, 0x20), "void (__cdecl *)()");
	SetType(get_member_id(id, 0x24), "void (__cdecl *)()");
	SetType(get_member_id(id, 0x28), "void (__cdecl *)()");
	SetType(get_member_id(id, 0x2C), "int (__cdecl *)(LPDIRECTSOUNDBUFFER, _DWORD, size_t, LPVOID *, size_t *, LPVOID *, size_t *, _DWORD)");
	SetType(get_member_id(id, 0x30), "void (__cdecl *)(_DWORD, _DWORD, _DWORD, _DWORD)");
	SetType(get_member_id(id, 0x34), "void (__cdecl *)(LPDIRECTSOUNDBUFFER, _DWORD)");
	SetType(get_member_id(id, 0x38), "void (__cdecl *)()");
	SetType(get_member_id(id, 0x3C), "void (__stdcall *)(_DWORD, _DWORD)");
	SetType(get_member_id(id, 0x40), "void (__stdcall *)(_DWORD, _DWORD)");
	SetType(get_member_id(id, 0x44), "void (__stdcall *)(LPDIRECTSOUNDBUFFER, int)");
	SetType(get_member_id(id, 0x48), "void (__cdecl *)(_DWORD)");
	SetType(get_member_id(id, 0x4C), "void (__cdecl *)(LPDIRECTSOUNDBUFFER, LPVOID, size_t, LPVOID, size_t)");
	SetType(get_member_id(id, 0x50), "void (__cdecl *)()");
	id = get_struc_id("IDirectSoundBuffer");
	SetType(get_member_id(id, 0x0), "IDirectSoundBufferVtbl *");
	id = get_struc_id("TRACKDATA");
	SetType(get_member_id(id, 0x0), "unsigned __int16");
	SetType(get_member_id(id, 0x2), "unsigned __int8");
	SetType(get_member_id(id, 0x3), "char");
	SetType(get_member_id(id, 0x4), "NOTELIST *");
	SetType(get_member_id(id, 0x8), "NOTELIST *");
	id = get_struc_id("IDirectSound");
	SetType(get_member_id(id, 0x0), "IDirectSoundVtbl *");
	id = get_struc_id("IDirectSoundVtbl");
	SetType(get_member_id(id, 0x0), "HRESULT (__stdcall *)(IDirectSound *This, const IID *const , LPVOID *)");
	SetType(get_member_id(id, 0x4), "ULONG (__stdcall *)(IDirectSound *This)");
	SetType(get_member_id(id, 0x8), "ULONG (__cdecl *)(IDirectSound *This)");
	SetType(get_member_id(id, 0xC), "int (__cdecl *)(LPDIRECTSOUND This, DSBUFFERDESC *, LPDIRECTSOUNDBUFFER *, DWORD)");
	SetType(get_member_id(id, 0x10), "HRESULT (__stdcall *)(IDirectSound *This, LPDSCAPS)");
	SetType(get_member_id(id, 0x14), "HRESULT (__stdcall *)(IDirectSound *This, LPDIRECTSOUNDBUFFER, LPDIRECTSOUNDBUFFER *)");
	SetType(get_member_id(id, 0x18), "void (__cdecl *)(LPDIRECTSOUND, HWND, signed int)");
	SetType(get_member_id(id, 0x1C), "HRESULT (__stdcall *)(IDirectSound *This)");
	SetType(get_member_id(id, 0x20), "HRESULT (__stdcall *)(IDirectSound *This, LPDWORD)");
	SetType(get_member_id(id, 0x24), "HRESULT (__stdcall *)(IDirectSound *This, DWORD)");
	SetType(get_member_id(id, 0x28), "HRESULT (__stdcall *)(IDirectSound *This, LPGUID)");
	id = get_struc_id("MUSICINFO");
	SetType(get_member_id(id, 0x0), "unsigned __int16");
	SetType(get_member_id(id, 0x2), "unsigned __int8");
	SetType(get_member_id(id, 0x3), "unsigned __int8");
	SetType(get_member_id(id, 0x4), "unsigned __int16");
	SetType(get_member_id(id, 0x8), "__int32");
	SetType(get_member_id(id, 0xC), "__int32");
	SetType(get_member_id(id, 0x10), "TRACKDATA[16]");
	id = get_struc_id("OrgData");
	SetType(get_member_id(id, 0x0), "MUSICINFO");
	SetType(get_member_id(id, 0xD0), "char");
	id = get_struc_id("NOTELIST");
	SetType(get_member_id(id, 0x0), "NOTELIST *");
	SetType(get_member_id(id, 0x4), "NOTELIST *");
	SetType(get_member_id(id, 0x8), "__int32");
	SetType(get_member_id(id, 0xC), "unsigned __int8");
	SetType(get_member_id(id, 0xD), "unsigned __int8");
	SetType(get_member_id(id, 0xE), "unsigned __int8");
	SetType(get_member_id(id, 0xF), "unsigned __int8");
	id = get_struc_id("MUSICINFO_file");
	SetType(get_member_id(id, 0x0), "__int16");
	SetType(get_member_id(id, 0x2), "char");
	SetType(get_member_id(id, 0x3), "char");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "TRACKDATA_file[16]");
	id = get_struc_id("TRACKDATA_file");
	SetType(get_member_id(id, 0x0), "__int16");
	SetType(get_member_id(id, 0x2), "char");
	SetType(get_member_id(id, 0x3), "char");
	SetType(get_member_id(id, 0x4), "__int16");
	id = get_struc_id("IDirectDrawVtbl");
	SetType(get_member_id(id, 0x0), "HRESULT (__stdcall *)(IDirectDraw *This, const IID *const riid, LPVOID *ppvObj)");
	SetType(get_member_id(id, 0x4), "ULONG (__stdcall *)(IDirectDraw *This)");
	SetType(get_member_id(id, 0x8), "ULONG (__cdecl *)(IDirectDraw *This)");
	SetType(get_member_id(id, 0xC), "int (__cdecl *)(LPDIRECTDRAW, HDC)");
	SetType(get_member_id(id, 0x10), "HRESULT (__cdecl *)(IDirectDraw *This, DWORD, LPDIRECTDRAWCLIPPER *, IUnknown *)");
	SetType(get_member_id(id, 0x14), "HRESULT (__stdcall *)(IDirectDraw *This, DWORD, LPPALETTEENTRY, LPDIRECTDRAWPALETTE *, IUnknown *)");
	SetType(get_member_id(id, 0x18), "HRESULT (__cdecl *)(IDirectDraw *This, LPDDSURFACEDESC, LPDIRECTDRAWSURFACE *, IUnknown *)");
	SetType(get_member_id(id, 0x1C), "HRESULT (__stdcall *)(IDirectDraw *This, LPDIRECTDRAWSURFACE, LPDIRECTDRAWSURFACE *)");
	SetType(get_member_id(id, 0x20), "HRESULT (__stdcall *)(IDirectDraw *This, DWORD, LPDDSURFACEDESC, LPVOID, LPDDENUMMODESCALLBACK)");
	SetType(get_member_id(id, 0x24), "HRESULT (__stdcall *)(IDirectDraw *This, DWORD, LPDDSURFACEDESC, LPVOID, LPDDENUMSURFACESCALLBACK)");
	SetType(get_member_id(id, 0x28), "HRESULT (__stdcall *)(IDirectDraw *This)");
	SetType(get_member_id(id, 0x2C), "HRESULT (__stdcall *)(IDirectDraw *This, LPDDCAPS, LPDDCAPS)");
	SetType(get_member_id(id, 0x30), "HRESULT (__stdcall *)(IDirectDraw *This, LPDDSURFACEDESC)");
	SetType(get_member_id(id, 0x34), "HRESULT (__stdcall *)(IDirectDraw *This, LPDWORD, LPDWORD)");
	SetType(get_member_id(id, 0x38), "HRESULT (__stdcall *)(IDirectDraw *This, LPDIRECTDRAWSURFACE *)");
	SetType(get_member_id(id, 0x3C), "HRESULT (__stdcall *)(IDirectDraw *This, LPDWORD)");
	SetType(get_member_id(id, 0x40), "HRESULT (__stdcall *)(IDirectDraw *This, LPDWORD)");
	SetType(get_member_id(id, 0x44), "void (__cdecl *)(LPDIRECTDRAW, HDC *)");
	SetType(get_member_id(id, 0x48), "HRESULT (__stdcall *)(IDirectDraw *This, GUID *)");
	SetType(get_member_id(id, 0x4C), "HRESULT (__stdcall *)(IDirectDraw *This)");
	SetType(get_member_id(id, 0x50), "HRESULT (__cdecl *)(LPDIRECTDRAW this, HWND, signed int)");
	SetType(get_member_id(id, 0x54), "HRESULT (__cdecl *)(LPDIRECTDRAW This, int, int, int)");
	SetType(get_member_id(id, 0x58), "HRESULT (__stdcall *)(IDirectDraw *This, DWORD, HANDLE)");
	id = get_struc_id("IDirectDrawSurface");
	SetType(get_member_id(id, 0x0), "IDirectDrawSurfaceVtbl *");
	id = get_struc_id("IDirectDrawSurfaceVtbl");
	SetType(get_member_id(id, 0x0), "HRESULT (__stdcall *)(IDirectDrawSurface *This, const IID *const riid, LPVOID *ppvObj)");
	SetType(get_member_id(id, 0x4), "ULONG (__stdcall *)(IDirectDrawSurface *This)");
	SetType(get_member_id(id, 0x8), "ULONG (__cdecl *)(IDirectDrawSurface *This)");
	SetType(get_member_id(id, 0xC), "HRESULT (__stdcall *)(IDirectDrawSurface *This, LPDIRECTDRAWSURFACE)");
	SetType(get_member_id(id, 0x10), "HRESULT (__stdcall *)(IDirectDrawSurface *This, LPRECT)");
	SetType(get_member_id(id, 0x14), "HRESULT (__stdcall *)(IDirectDrawSurface *This, LPRECT, LPDIRECTDRAWSURFACE, LPRECT, DWORD, LPDDBLTFX)");
	SetType(get_member_id(id, 0x18), "HRESULT (__stdcall *)(IDirectDrawSurface *This, LPDDBLTBATCH, DWORD, DWORD)");
	SetType(get_member_id(id, 0x1C), "HRESULT (__stdcall *)(IDirectDrawSurface *This, DWORD, DWORD, LPDIRECTDRAWSURFACE, LPRECT, DWORD)");
	SetType(get_member_id(id, 0x20), "HRESULT (__stdcall *)(IDirectDrawSurface *This, DWORD, LPDIRECTDRAWSURFACE)");
	SetType(get_member_id(id, 0x24), "HRESULT (__stdcall *)(IDirectDrawSurface *This, LPVOID, LPDDENUMSURFACESCALLBACK)");
	SetType(get_member_id(id, 0x28), "HRESULT (__stdcall *)(IDirectDrawSurface *This, DWORD, LPVOID, LPDDENUMSURFACESCALLBACK)");
	SetType(get_member_id(id, 0x2C), "HRESULT (__stdcall *)(IDirectDrawSurface *This, LPDIRECTDRAWSURFACE, DWORD)");
	SetType(get_member_id(id, 0x30), "HRESULT (__stdcall *)(IDirectDrawSurface *This, LPDDSCAPS, LPDIRECTDRAWSURFACE *)");
	SetType(get_member_id(id, 0x34), "HRESULT (__stdcall *)(IDirectDrawSurface *This, DWORD)");
	SetType(get_member_id(id, 0x38), "HRESULT (__stdcall *)(IDirectDrawSurface *This, LPDDSCAPS)");
	SetType(get_member_id(id, 0x3C), "HRESULT (__stdcall *)(IDirectDrawSurface *This, LPDIRECTDRAWCLIPPER *)");
	SetType(get_member_id(id, 0x40), "HRESULT (__stdcall *)(IDirectDrawSurface *This, DWORD, LPDDCOLORKEY)");
	SetType(get_member_id(id, 0x44), "HRESULT (__cdecl *)(IDirectDrawSurface *This, HDC *)");
	SetType(get_member_id(id, 0x48), "HRESULT (__stdcall *)(IDirectDrawSurface *This, DWORD)");
	SetType(get_member_id(id, 0x4C), "HRESULT (__stdcall *)(IDirectDrawSurface *This, LPLONG, LPLONG)");
	SetType(get_member_id(id, 0x50), "HRESULT (__stdcall *)(IDirectDrawSurface *This, LPDIRECTDRAWPALETTE *)");
	SetType(get_member_id(id, 0x54), "HRESULT (__stdcall *)(IDirectDrawSurface *This, LPDDPIXELFORMAT)");
	SetType(get_member_id(id, 0x58), "HRESULT (__stdcall *)(IDirectDrawSurface *This, LPDDSURFACEDESC)");
	SetType(get_member_id(id, 0x5C), "HRESULT (__stdcall *)(IDirectDrawSurface *This, LPDIRECTDRAW, LPDDSURFACEDESC)");
	SetType(get_member_id(id, 0x60), "HRESULT (__cdecl *)(IDirectDrawSurface *This)");
	SetType(get_member_id(id, 0x64), "HRESULT (__cdecl *)(IDirectDrawSurface *This, LPRECT, LPDDSURFACEDESC, DWORD, HANDLE)");
	SetType(get_member_id(id, 0x68), "HRESULT (__cdecl *)(IDirectDrawSurface *This, HDC)");
	SetType(get_member_id(id, 0x6C), "HRESULT (__cdecl *)(IDirectDrawSurface *This)");
	SetType(get_member_id(id, 0x70), "HRESULT (__cdecl *)(IDirectDrawSurface *This, LPDIRECTDRAWCLIPPER)");
	SetType(get_member_id(id, 0x74), "HRESULT (__cdecl *)(IDirectDrawSurface *This, DWORD, LPDDCOLORKEY)");
	SetType(get_member_id(id, 0x78), "HRESULT (__stdcall *)(IDirectDrawSurface *This, LONG, LONG)");
	SetType(get_member_id(id, 0x7C), "HRESULT (__stdcall *)(IDirectDrawSurface *This, LPDIRECTDRAWPALETTE)");
	SetType(get_member_id(id, 0x80), "HRESULT (__stdcall *)(IDirectDrawSurface *This, LPVOID)");
	SetType(get_member_id(id, 0x84), "HRESULT (__stdcall *)(IDirectDrawSurface *This, LPRECT, LPDIRECTDRAWSURFACE, LPRECT, DWORD, LPDDOVERLAYFX)");
	SetType(get_member_id(id, 0x88), "HRESULT (__stdcall *)(IDirectDrawSurface *This, DWORD)");
	SetType(get_member_id(id, 0x8C), "HRESULT (__stdcall *)(IDirectDrawSurface *This, DWORD, LPDIRECTDRAWSURFACE)");
	id = get_struc_id("DDSURFACEDESC");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "DWORD");
	SetType(get_member_id(id, 0x8), "DWORD");
	SetType(get_member_id(id, 0xC), "DWORD");
	SetType(get_member_id(id, 0x10), "_DDSURFACEDESC::$091DBF7D405BE25E65B16620C008128B");
	SetType(get_member_id(id, 0x14), "DWORD");
	SetType(get_member_id(id, 0x18), "_DDSURFACEDESC::$9AB659F8D6A45F8C7834A76B9C40973B");
	SetType(get_member_id(id, 0x1C), "DWORD");
	SetType(get_member_id(id, 0x20), "DWORD");
	SetType(get_member_id(id, 0x24), "LPVOID");
	SetType(get_member_id(id, 0x28), "DDCOLORKEY");
	SetType(get_member_id(id, 0x30), "DDCOLORKEY");
	SetType(get_member_id(id, 0x38), "DDCOLORKEY");
	SetType(get_member_id(id, 0x40), "DDCOLORKEY");
	SetType(get_member_id(id, 0x48), "DDPIXELFORMAT");
	SetType(get_member_id(id, 0x68), "DDSCAPS");
	id = get_struc_id("_DDSURFACEDESC::$091DBF7D405BE25E65B16620C008128B");
	SetType(get_member_id(id, 0x0), "LONG");
	SetType(get_member_id(id, 0x1), "DWORD");
	id = get_struc_id("_DDSURFACEDESC::$9AB659F8D6A45F8C7834A76B9C40973B");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x1), "DWORD");
	SetType(get_member_id(id, 0x2), "DWORD");
	id = get_struc_id("DDCOLORKEY");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "DWORD");
	id = get_struc_id("DDPIXELFORMAT");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "DWORD");
	SetType(get_member_id(id, 0x8), "DWORD");
	SetType(get_member_id(id, 0xC), "_DDPIXELFORMAT::$10AA641B3215541DB69A48A361AE0013");
	SetType(get_member_id(id, 0x10), "_DDPIXELFORMAT::$0E0BD8DB15B3F2A790C062F781315157");
	SetType(get_member_id(id, 0x14), "_DDPIXELFORMAT::$DB4BDA43012B420E1DC9AEEACAA267A5");
	SetType(get_member_id(id, 0x18), "_DDPIXELFORMAT::$4C5EBD389D88C4C046794501FFF390F4");
	SetType(get_member_id(id, 0x1C), "_DDPIXELFORMAT::$3ED4EC923A768B2489A9D1155BD11968");
	id = get_struc_id("_DDPIXELFORMAT::$10AA641B3215541DB69A48A361AE0013");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x1), "DWORD");
	SetType(get_member_id(id, 0x2), "DWORD");
	SetType(get_member_id(id, 0x3), "DWORD");
	id = get_struc_id("_DDPIXELFORMAT::$0E0BD8DB15B3F2A790C062F781315157");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x1), "DWORD");
	id = get_struc_id("_DDPIXELFORMAT::$DB4BDA43012B420E1DC9AEEACAA267A5");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x1), "DWORD");
	id = get_struc_id("_DDPIXELFORMAT::$4C5EBD389D88C4C046794501FFF390F4");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x1), "DWORD");
	id = get_struc_id("_DDPIXELFORMAT::$3ED4EC923A768B2489A9D1155BD11968");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x1), "DWORD");
	SetType(get_member_id(id, 0x2), "DWORD");
	SetType(get_member_id(id, 0x3), "DWORD");
	id = get_struc_id("DDSCAPS");
	SetType(get_member_id(id, 0x0), "DWORD");
	id = get_struc_id("IDirectInputA");
	SetType(get_member_id(id, 0x0), "IDirectInputAVtbl *");
	id = get_struc_id("IDirectInputAVtbl");
	SetType(get_member_id(id, 0x0), "HRESULT (__stdcall *)(IDirectInputA *This, const IID *const riid, LPVOID *ppvObj)");
	SetType(get_member_id(id, 0x4), "ULONG (__cdecl *)(IDirectInputA *This)");
	SetType(get_member_id(id, 0x8), "ULONG (__stdcall *)(IDirectInputA *This)");
	SetType(get_member_id(id, 0xC), "HRESULT (__stdcall *)(IDirectInputA *This, const GUID *const , LPDIRECTINPUTDEVICEA *, LPUNKNOWN)");
	SetType(get_member_id(id, 0x10), "HRESULT (__cdecl *)(IDirectInputA *This, DWORD, LPDIENUMDEVICESCALLBACKA, LPVOID, DWORD)");
	SetType(get_member_id(id, 0x14), "HRESULT (__stdcall *)(IDirectInputA *This, const GUID *const )");
	SetType(get_member_id(id, 0x18), "HRESULT (__stdcall *)(IDirectInputA *This, HWND, DWORD)");
	SetType(get_member_id(id, 0x1C), "HRESULT (__stdcall *)(IDirectInputA *This, HINSTANCE, DWORD)");
	id = get_struc_id("IDirectDrawClipper");
	SetType(get_member_id(id, 0x0), "IDirectDrawClipperVtbl *");
	id = get_struc_id("IDirectDrawClipperVtbl");
	SetType(get_member_id(id, 0x0), "HRESULT (__stdcall *)(IDirectDrawClipper *This, const IID *const riid, LPVOID *ppvObj)");
	SetType(get_member_id(id, 0x4), "ULONG (__stdcall *)(IDirectDrawClipper *This)");
	SetType(get_member_id(id, 0x8), "ULONG (__stdcall *)(IDirectDrawClipper *This)");
	SetType(get_member_id(id, 0xC), "HRESULT (__stdcall *)(IDirectDrawClipper *This, LPRECT, LPRGNDATA, LPDWORD)");
	SetType(get_member_id(id, 0x10), "HRESULT (__stdcall *)(IDirectDrawClipper *This, HWND *)");
	SetType(get_member_id(id, 0x14), "HRESULT (__stdcall *)(IDirectDrawClipper *This, LPDIRECTDRAW, DWORD)");
	SetType(get_member_id(id, 0x18), "HRESULT (__stdcall *)(IDirectDrawClipper *This, BOOL *)");
	SetType(get_member_id(id, 0x1C), "HRESULT (__stdcall *)(IDirectDrawClipper *This, LPRGNDATA, DWORD)");
	SetType(get_member_id(id, 0x20), "HRESULT (__cdecl *)(IDirectDrawClipper *This, DWORD, HWND)");
	id = get_struc_id("WeaponData");
	SetType(get_member_id(id, 0x0), "char");
	SetType(get_member_id(id, 0x1), "char");
	SetType(get_member_id(id, 0x2), "char[2]");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "int");
	SetType(get_member_id(id, 0x14), "int");
	SetType(get_member_id(id, 0x18), "int");
	SetType(get_member_id(id, 0x1C), "NPCCollisionFlags");
	id = get_struc_id("effectData");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "int");
	id = get_struc_id("DDBLTFX");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "DWORD");
	SetType(get_member_id(id, 0x8), "DWORD");
	SetType(get_member_id(id, 0xC), "DWORD");
	SetType(get_member_id(id, 0x10), "DWORD");
	SetType(get_member_id(id, 0x14), "DWORD");
	SetType(get_member_id(id, 0x18), "DWORD");
	SetType(get_member_id(id, 0x1C), "DWORD");
	SetType(get_member_id(id, 0x20), "DWORD");
	SetType(get_member_id(id, 0x24), "DWORD");
	SetType(get_member_id(id, 0x28), "_DDBLTFX::$EA6EC20695B0AA8ECF92A441DE55A935");
	SetType(get_member_id(id, 0x2C), "DWORD");
	SetType(get_member_id(id, 0x30), "_DDBLTFX::$702C52B3655764E63C007A6B73D01C19");
	SetType(get_member_id(id, 0x34), "DWORD");
	SetType(get_member_id(id, 0x38), "DWORD");
	SetType(get_member_id(id, 0x3C), "DWORD");
	SetType(get_member_id(id, 0x40), "DWORD");
	SetType(get_member_id(id, 0x44), "_DDBLTFX::$3639C047B3E88B857708792B1F3FEC83");
	SetType(get_member_id(id, 0x48), "DWORD");
	SetType(get_member_id(id, 0x4C), "_DDBLTFX::$C0828DA952883A43DEF8D462ACC90C87");
	SetType(get_member_id(id, 0x50), "_DDBLTFX::$4C109671A06E28B8127C40041AB5795C");
	SetType(get_member_id(id, 0x54), "DDCOLORKEY");
	SetType(get_member_id(id, 0x5C), "DDCOLORKEY");
	id = get_struc_id("_DDBLTFX::$EA6EC20695B0AA8ECF92A441DE55A935");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x1), "LPDIRECTDRAWSURFACE");
	id = get_struc_id("_DDBLTFX::$702C52B3655764E63C007A6B73D01C19");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x1), "LPDIRECTDRAWSURFACE");
	id = get_struc_id("_DDBLTFX::$3639C047B3E88B857708792B1F3FEC83");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x1), "LPDIRECTDRAWSURFACE");
	id = get_struc_id("_DDBLTFX::$C0828DA952883A43DEF8D462ACC90C87");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x1), "LPDIRECTDRAWSURFACE");
	id = get_struc_id("_DDBLTFX::$4C109671A06E28B8127C40041AB5795C");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x1), "DWORD");
	SetType(get_member_id(id, 0x2), "DWORD");
	SetType(get_member_id(id, 0x3), "LPDIRECTDRAWSURFACE");
	return id;
}

//------------------------------------------------------------------------
// Information about type information for structure members

static ApplyStrucTInfos() {
	ApplyStrucTInfos_0();
}

static Structures_0(id) {
        auto mid;

	id = add_struc(-1,"FILETIME",0);
	id = add_struc(-1,"configDataFile",0);
	id = add_struc(-1,"SYSTEMTIME",0);
	id = add_struc(-1,"_SYSTEMTIME",0);
	id = add_struc(-1,"_SYSTEM_INFO::$41710344DA04EC56A327D4EA11DEF6D2::$AA04DEB0C6383F89F13D312A174572A9",0);
	id = add_struc(-1,"_SYSTEM_INFO::$41710344DA04EC56A327D4EA11DEF6D2",1);
	id = add_struc(-1,"_SYSTEM_INFO",0);
	id = add_struc(-1,"FILE",0);
	id = add_struc(-1,"_LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E",0);
	id = add_struc(-1,"LARGE_INTEGER",1);
	id = add_struc(-1,"_FILETIME",0);
	id = add_struc(-1,"_cpinfo",0);
	id = add_struc(-1,"_SECURITY_ATTRIBUTES",0);
	id = add_struc(-1,"_MEMORY_BASIC_INFORMATION",0);
	id = add_struc(-1,"_STARTUPINFOA",0);
	id = add_struc(-1,"timecaps_tag",0);
	id = add_struc(-1,"MSG",0);
	id = add_struc(-1,"tagMSG",0);
	id = add_struc(-1,"WNDCLASSEXA",0);
	id = add_struc(-1,"RECT",0);
	id = add_struc(-1,"POINT",0);
	id = add_struc(-1,"WINDOWPLACEMENT",0);
	id = add_struc(-1,"tagRECT",0);
	id = add_struc(-1,"CPPEH_RECORD",0);
	id = add_struc(-1,"_msEH",0);
	id = add_struc(-1,"struct_0",0);
	id = add_struc(-1,"_EH3_EXCEPTION_REGISTRATION",0);
	id = add_struc(-1,"_SCOPETABLE_ENTRY",0);
	id = add_struc(-1,"IDirectDraw",0);
	id = add_struc(-1,"NPCInfo",0);
	id = add_struc(-1,"someRectThing",0);
	id = add_struc(-1,"MapData",0);
	id = add_struc(-1,"NPC",0);
	id = add_struc(-1,"NPCCollisionFlags",0);
	id = add_struc(-1,"Effect",0);
	id = add_struc(-1,"FadeVars",0);
	id = add_struc(-1,"_tiddata",0);
	id = add_struc(-1,"Player",0);
	id = add_struc(-1,"Weapon",0);
	id = add_struc(-1,"FlashAnimation",0);
	id = add_struc(-1,"MapHeader",0);
	id = add_struc(-1,"MapData2",0);
	id = add_struc(-1,"Background",0);
	id = add_struc(-1,"camera",0);
	id = add_struc(-1,"WeaponEXPValues",0);
	id = add_struc(-1,"ItemData",0);
	id = add_struc(-1,"HellTimeFile",0);
	id = add_struc(-1,"MapName",0);
	id = add_struc(-1,"Boss",0);
	id = add_struc(-1,"ProfileFile",0);
	id = add_struc(-1,"PermitStageStruct",0);
	id = add_struc(-1,"TSCStruct",0);
	id = add_struc(-1,"Illustration",0);
	id = add_struc(-1,"TextObject",0);
	id = add_struc(-1,"Position",0);
	id = add_struc(-1,"Bullet",0);
	id = add_struc(-1,"DSBUFFERDESC",0);
	id = add_struc(-1,"OCTWAVE",0);
	id = add_struc(-1,"IDirectSoundBufferVtbl",0);
	id = add_struc(-1,"IDirectSoundBuffer",0);
	id = add_struc(-1,"TRACKDATA",0);
	id = add_struc(-1,"IDirectSound",0);
	id = add_struc(-1,"IDirectSoundVtbl",0);
	id = add_struc(-1,"MUSICINFO",0);
	id = add_struc(-1,"OrgData",0);
	id = add_struc(-1,"NOTELIST",0);
	id = add_struc(-1,"MUSICINFO_file",0);
	id = add_struc(-1,"TRACKDATA_file",0);
	id = add_struc(-1,"IDirectDrawVtbl",0);
	id = add_struc(-1,"IDirectDrawSurface",0);
	id = add_struc(-1,"IDirectDrawSurfaceVtbl",0);
	id = add_struc(-1,"DDSURFACEDESC",0);
	id = add_struc(-1,"_DDSURFACEDESC::$091DBF7D405BE25E65B16620C008128B",1);
	id = add_struc(-1,"_DDSURFACEDESC::$9AB659F8D6A45F8C7834A76B9C40973B",1);
	id = add_struc(-1,"DDCOLORKEY",0);
	id = add_struc(-1,"DDPIXELFORMAT",0);
	id = add_struc(-1,"_DDPIXELFORMAT::$10AA641B3215541DB69A48A361AE0013",1);
	id = add_struc(-1,"_DDPIXELFORMAT::$0E0BD8DB15B3F2A790C062F781315157",1);
	id = add_struc(-1,"_DDPIXELFORMAT::$DB4BDA43012B420E1DC9AEEACAA267A5",1);
	id = add_struc(-1,"_DDPIXELFORMAT::$4C5EBD389D88C4C046794501FFF390F4",1);
	id = add_struc(-1,"_DDPIXELFORMAT::$3ED4EC923A768B2489A9D1155BD11968",1);
	id = add_struc(-1,"DDSCAPS",0);
	id = add_struc(-1,"IDirectInputA",0);
	id = add_struc(-1,"IDirectInputAVtbl",0);
	id = add_struc(-1,"IDirectDrawClipper",0);
	id = add_struc(-1,"IDirectDrawClipperVtbl",0);
	id = add_struc(-1,"WeaponData",0);
	id = add_struc(-1,"effectData",0);
	id = add_struc(-1,"DDBLTFX",0);
	id = add_struc(-1,"_DDBLTFX::$EA6EC20695B0AA8ECF92A441DE55A935",1);
	id = add_struc(-1,"_DDBLTFX::$702C52B3655764E63C007A6B73D01C19",1);
	id = add_struc(-1,"_DDBLTFX::$3639C047B3E88B857708792B1F3FEC83",1);
	id = add_struc(-1,"_DDBLTFX::$C0828DA952883A43DEF8D462ACC90C87",1);
	id = add_struc(-1,"_DDBLTFX::$4C109671A06E28B8127C40041AB5795C",1);
	
	id = get_struc_id("FILETIME");
	mid = add_struc_member(id,"dwLowDateTime",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwHighDateTime",	0X4,	0x20000400,	-1,	4);
	
	id = get_struc_id("configDataFile");
	mid = add_struc_member(id,"proof",	0,	0x000400,	-1,	32);
	mid = add_struc_member(id,"fontName",	0X20,	0x000400,	-1,	64);
	mid = add_struc_member(id,"moveButtonMode",	0X60,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"attackButtonMode",	0X64,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"okButtonMode",	0X68,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"displayMode",	0X6C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"joystickMode",	0X70,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"joystickButton",	0X74,	0x20000400,	-1,	32);
	set_struc_align(id,2);
	
	id = get_struc_id("SYSTEMTIME");
	mid = add_struc_member(id,"wYear",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wMonth",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wDayOfWeek",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wDay",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wHour",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wMinute",	0XA,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wSecond",	0XC,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wMilliseconds",	0XE,	0x10000400,	-1,	2);
	
	id = get_struc_id("_SYSTEMTIME");
	mid = add_struc_member(id,"wYear",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wMonth",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wDayOfWeek",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wDay",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wHour",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wMinute",	0XA,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wSecond",	0XC,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wMilliseconds",	0XE,	0x10000400,	-1,	2);
	
	id = get_struc_id("_SYSTEM_INFO::$41710344DA04EC56A327D4EA11DEF6D2::$AA04DEB0C6383F89F13D312A174572A9");
	mid = add_struc_member(id,"wProcessorArchitecture",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wReserved",	0X2,	0x10000400,	-1,	2);
	
	id = get_struc_id("_SYSTEM_INFO::$41710344DA04EC56A327D4EA11DEF6D2");
	mid = add_struc_member(id,"dwOemId",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"anonymous_0",	0,	0x60000400,	get_struc_id("_SYSTEM_INFO::$41710344DA04EC56A327D4EA11DEF6D2::$AA04DEB0C6383F89F13D312A174572A9"),	4);
	
	id = get_struc_id("_SYSTEM_INFO");
	mid = add_struc_member(id,"anonymous_0",	0,	0x60000400,	get_struc_id("_SYSTEM_INFO::$41710344DA04EC56A327D4EA11DEF6D2"),	4);
	mid = add_struc_member(id,"dwPageSize",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"lpMinimumApplicationAddress",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"lpMaximumApplicationAddress",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"dwActiveProcessorMask",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwNumberOfProcessors",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwProcessorType",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwAllocationGranularity",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"wProcessorLevel",	0X20,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wProcessorRevision",	0X22,	0x10000400,	-1,	2);
	
	id = get_struc_id("FILE");
	mid = add_struc_member(id,"_ptr",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_cnt",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_base",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_flag",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_file",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_charbuf",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_bufsiz",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_tmpfname",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	
	id = get_struc_id("_LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E");
	mid = add_struc_member(id,"LowPart",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"HighPart",	0X4,	0x20000400,	-1,	4);
	
	id = get_struc_id("LARGE_INTEGER");
	mid = add_struc_member(id,"anonymous_0",	0,	0x60000400,	get_struc_id("_LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E"),	8);
	mid = add_struc_member(id,"u",	0,	0x60000400,	get_struc_id("_LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E"),	8);
	mid = add_struc_member(id,"QuadPart",	0,	0x30000400,	-1,	8);
	
	id = get_struc_id("_FILETIME");
	mid = add_struc_member(id,"dwLowDateTime",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwHighDateTime",	0X4,	0x20000400,	-1,	4);
	
	id = get_struc_id("_cpinfo");
	mid = add_struc_member(id,"MaxCharSize",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"DefaultChar",	0X4,	0x000400,	-1,	2);
	mid = add_struc_member(id,"LeadByte",	0X6,	0x000400,	-1,	12);
	mid = add_struc_member(id,"_padding",	0X12,	0x000400,	-1,	2);
	
	id = get_struc_id("_SECURITY_ATTRIBUTES");
	mid = add_struc_member(id,"nLength",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"lpSecurityDescriptor",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"bInheritHandle",	0X8,	0x20000400,	-1,	4);
	
	id = get_struc_id("_MEMORY_BASIC_INFORMATION");
	mid = add_struc_member(id,"BaseAddress",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"AllocationBase",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"AllocationProtect",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"RegionSize",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"State",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Protect",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Type",	0X18,	0x20000400,	-1,	4);
	
	id = get_struc_id("_STARTUPINFOA");
	mid = add_struc_member(id,"cb",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"lpReserved",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"lpDesktop",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"lpTitle",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"dwX",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwY",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwXSize",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwYSize",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwXCountChars",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwYCountChars",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwFillAttribute",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwFlags",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"wShowWindow",	0X30,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"cbReserved2",	0X32,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"lpReserved2",	0X34,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"hStdInput",	0X38,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"hStdOutput",	0X3C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"hStdError",	0X40,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	
	id = get_struc_id("timecaps_tag");
	mid = add_struc_member(id,"wPeriodMin",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"wPeriodMax",	0X4,	0x20000400,	-1,	4);
	
	id = get_struc_id("POINT");
	mid = add_struc_member(id,"x",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"y",	0X4,	0x20000400,	-1,	4);
	
	id = get_struc_id("MSG");
	mid = add_struc_member(id,"hwnd",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"message",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"wParam",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"lParam",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"time",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pt",	0X14,	0x60000400,	get_struc_id("POINT"),	8);
	
	id = get_struc_id("tagMSG");
	mid = add_struc_member(id,"hwnd",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"message",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"wParam",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"lParam",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"time",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pt",	0X14,	0x60000400,	get_struc_id("POINT"),	8);
	
	id = get_struc_id("WNDCLASSEXA");
	mid = add_struc_member(id,"cbSize",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"style",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"lpfnWndProc",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"cbClsExtra",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"cbWndExtra",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"hInstance",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"hIcon",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"hCursor",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"hbrBackground",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"lpszMenuName",	0X24,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"lpszClassName",	0X28,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"hIconSm",	0X2C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	
	id = get_struc_id("RECT");
	mid = add_struc_member(id,"left",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"top",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"right",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"bottom",	0XC,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("WINDOWPLACEMENT");
	mid = add_struc_member(id,"length",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"flags",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"showCmd",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ptMinPosition",	0XC,	0x60000400,	get_struc_id("POINT"),	8);
	mid = add_struc_member(id,"ptMaxPosition",	0X14,	0x60000400,	get_struc_id("POINT"),	8);
	mid = add_struc_member(id,"rcNormalPosition",	0X1C,	0x60000400,	get_struc_id("RECT"),	16);
	
	id = get_struc_id("tagRECT");
	mid = add_struc_member(id,"left",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"top",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"right",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"bottom",	0XC,	0x20000400,	-1,	4);
	
	id = get_struc_id("_EH3_EXCEPTION_REGISTRATION");
	mid = add_struc_member(id,"Next",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ExceptionHandler",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ScopeTable",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"TryLevel",	0XC,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("CPPEH_RECORD");
	mid = add_struc_member(id,"old_esp",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"exc_ptr",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"registration",	0X8,	0x60000400,	get_struc_id("_EH3_EXCEPTION_REGISTRATION"),	16);
	set_struc_align(id,2);
	
	id = get_struc_id("_msEH");
	mid = add_struc_member(id,"_unk",	0,	0x21120400,	-1,	4);
	mid = add_struc_member(id,"FilterProc",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ExitProc",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	
	id = get_struc_id("struct_0");
	mid = add_struc_member(id,"anonymous_0",	0,	0x50000500,	0,	1144);
	
	id = get_struc_id("_SCOPETABLE_ENTRY");
	mid = add_struc_member(id,"EnclosingLevel",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"FilterFunc",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"HandlerFunc",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("IDirectDraw");
	mid = add_struc_member(id,"lpVtbl",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("someRectThing");
	mid = add_struc_member(id,"front",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"top",	0X1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"back",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"bottom",	0X3,	0x000400,	-1,	1);
	
	id = get_struc_id("NPCInfo");
	mid = add_struc_member(id,"bits",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"life",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"surf",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"soundOnHit",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"soundOnDeath",	0X6,	0x000400,	-1,	1);
	mid = add_struc_member(id,"size",	0X7,	0x000400,	-1,	1);
	mid = add_struc_member(id,"exp",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"damage",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"hit",	0X10,	0x60000400,	get_struc_id("someRectThing"),	4);
	mid = add_struc_member(id,"view",	0X14,	0x60000400,	get_struc_id("someRectThing"),	4);
	set_struc_align(id,2);
	
	id = get_struc_id("MapData");
	mid = add_struc_member(id,"data",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"mapLayoutBuffer",	0X4,	0x000400,	-1,	257);
	mid = add_struc_member(id,"width",	0X106,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"length",	0X108,	0x10000400,	-1,	2);
	set_struc_align(id,2);
	
	id = get_struc_id("NPCCollisionFlags");
	mid = add_struc_member(id,"front",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"top",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"back",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"bottom",	0XC,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("NPC");
	mid = add_struc_member(id,"isAlive",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"collisionFlags",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"XPos",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"YPos",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"XVel",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"YVel",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"XVel2",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"YVel2",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"curlyTargetX",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"curlyTargetY",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"entityType",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"code_flag",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"entityEventNum",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"entitySpritesheet",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"hitSound",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"deathSound",	0X3C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"life",	0X40,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"EXPAmount",	0X44,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"explosionSize",	0X48,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"direction",	0X4C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"entityFlags",	0X50,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"rect",	0X54,	0x60000400,	get_struc_id("RECT"),	16);
	mid = add_struc_member(id,"animationTimer",	0X64,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"animationNumber",	0X68,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"count1",	0X6C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"count2",	0X70,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"currentState",	0X74,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"waitTimer",	0X78,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"hitbox",	0X7C,	0x60000400,	get_struc_id("NPCCollisionFlags"),	16);
	mid = add_struc_member(id,"view",	0X8C,	0x60000400,	get_struc_id("NPCCollisionFlags"),	16);
	mid = add_struc_member(id,"isBeingHit",	0X9C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"damage_view",	0XA0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"damage",	0XA4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"parentNPC",	0XA8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("Effect");
	mid = add_struc_member(id,"isUsed",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"effectNum",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"direction",	0X8,	0x28800400,	get_enum("Directions"),	4);
	mid = add_struc_member(id,"XPos",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"YPos",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"XVel",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"YVel",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"actionNumber",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"actionTimer",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"animationNumber",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"animationTimer",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"viewLeft",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"viewTop",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"rect",	0X34,	0x60000400,	get_struc_id("RECT"),	16);
	set_struc_align(id,2);
	
	id = get_struc_id("FadeVars");
	mid = add_struc_member(id,"mode",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"byteMask",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"count",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"animationNumber",	0XC,	0x000400,	-1,	300);
	mid = add_struc_member(id,"flag",	0X138,	0x000400,	-1,	300);
	mid = add_struc_member(id,"direction",	0X264,	0x000400,	-1,	1);
	set_struc_align(id,2);
	
	id = get_struc_id("_tiddata");
	mid = add_struc_member(id,"gap0",	0,	0x000400,	-1,	20);
	mid = add_struc_member(id,"_holdrand",	0X14,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("Player");
	mid = add_struc_member(id,"flags",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"collisionFlags",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"direction",	0X8,	0x28800400,	get_enum("Directions"),	4);
	mid = add_struc_member(id,"isFacingUp",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"isFacingDown",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"isInFishBattle",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"equippedItems",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"XPos",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"YPos",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"cameraXPos",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"cameraYPos",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"cameraXVel",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"cameraYVel",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"XVel",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"YVel",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"animationTimer",	0X3C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"animationNumber",	0X40,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Hitbox",	0X44,	0x60000400,	get_struc_id("NPCCollisionFlags"),	16);
	mid = add_struc_member(id,"Sizebox",	0X54,	0x60000400,	get_struc_id("NPCCollisionFlags"),	16);
	mid = add_struc_member(id,"Rect",	0X64,	0x60000400,	get_struc_id("RECT"),	16);
	mid = add_struc_member(id,"Rect_Weapon",	0X74,	0x60000400,	get_struc_id("RECT"),	16);
	mid = add_struc_member(id,"level",	0X84,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Level_Bar_Flashes",	0X88,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Exp_To_Gain",	0X8C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Invincibility_Timer",	0X90,	0x000400,	-1,	1);
	mid = add_struc_member(id,"Num_Whim_Stars",	0X91,	0x000400,	-1,	1);
	mid = add_struc_member(id,"Time_Between_Shots",	0X92,	0x000400,	-1,	1);
	mid = add_struc_member(id,"bubble",	0X93,	0x000400,	-1,	1);
	mid = add_struc_member(id,"Health",	0X94,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"star",	0X96,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"Max_Health",	0X98,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"a",	0X9A,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"Life_Bar",	0X9C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Health_Bar_Timer",	0XA0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Air",	0XA4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"air_get",	0XA8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"sprash",	0XAC,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ques",	0XAD,	0x000400,	-1,	1);
	mid = add_struc_member(id,"boost_sw",	0XAE,	0x000400,	-1,	1);
	mid = add_struc_member(id,"boosterFuel",	0XB0,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("FlashAnimation");
	mid = add_struc_member(id,"mode",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"act_no",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"flashFlag",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"count",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"width",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"XPos",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"YPos",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"rect1",	0X1C,	0x60000400,	get_struc_id("RECT"),	16);
	mid = add_struc_member(id,"rect2",	0X2C,	0x60000400,	get_struc_id("RECT"),	16);
	set_struc_align(id,2);
	
	id = get_struc_id("MapHeader");
	mid = add_struc_member(id,"parts",	0,	0x000400,	-1,	32);
	mid = add_struc_member(id,"map",	0X20,	0x000400,	-1,	32);
	mid = add_struc_member(id,"backgroundType",	0X40,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"backgroundFile",	0X44,	0x000400,	-1,	32);
	mid = add_struc_member(id,"NPCFile",	0X64,	0x000400,	-1,	32);
	mid = add_struc_member(id,"bossFile",	0X84,	0x000400,	-1,	32);
	mid = add_struc_member(id,"bossNumber",	0XA4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"name",	0XA5,	0x000400,	-1,	32);
	set_struc_align(id,2);
	
	id = get_struc_id("MapData2");
	mid = add_struc_member(id,"path",	0,	0x000400,	-1,	260);
	mid = add_struc_member(id,"size",	0X104,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"data",	0X108,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"mode",	0X10C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"flags",	0X10D,	0x000400,	-1,	1);
	mid = add_struc_member(id,"p_read",	0X110,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"p_write",	0X114,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"line",	0X118,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ypos_line",	0X11C,	0x20000400,	-1,	16);
	mid = add_struc_member(id,"wait",	0X12C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"wait_next",	0X130,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"next_event",	0X134,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"select",	0X138,	0x000400,	-1,	1);
	mid = add_struc_member(id,"face",	0X13C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"face_x",	0X140,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"item",	0X144,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"item_y",	0X148,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"rcText",	0X14C,	0x60000400,	get_struc_id("RECT"),	16);
	mid = add_struc_member(id,"offsetY",	0X15C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"wait_beam",	0X160,	0x000400,	-1,	1);
	set_struc_align(id,2);
	
	id = get_struc_id("Background");
	mid = add_struc_member(id,"flag",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tileWidth",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tileHeight",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"numX",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"numY",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"mode",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_fx",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"unknownFiller",	0X1C,	0x000400,	-1,	12);
	set_struc_align(id,2);
	
	id = get_struc_id("camera");
	mid = add_struc_member(id,"X_Pos",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Y_Pos",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Target_X",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Target_Y",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Move_Ticks",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"SoftQuakeDuration",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"HardQuakeDuration",	0X18,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("WeaponEXPValues");
	mid = add_struc_member(id,"exp",	0,	0x20000400,	-1,	12);
	set_struc_align(id,2);
	
	id = get_struc_id("HellTimeFile");
	mid = add_struc_member(id,"counter",	0,	0x20000400,	-1,	16);
	mid = add_struc_member(id,"random",	0X10,	0x000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("MapName");
	mid = add_struc_member(id,"flag",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"wait",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"name",	0X8,	0x000400,	-1,	32);
	set_struc_align(id,2);
	
	id = get_struc_id("Boss");
	mid = add_struc_member(id,"flag",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pLife",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"max",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"br",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"count",	0X10,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("Weapon");
	mid = add_struc_member(id,"weaponID",	0,	0x28800400,	get_enum("weapons"),	4);
	mid = add_struc_member(id,"level",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"EXP",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"maxAmmo",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ammo",	0X10,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("ItemData");
	mid = add_struc_member(id,"code",	0,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("PermitStageStruct");
	mid = add_struc_member(id,"index",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"event",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("ProfileFile");
	mid = add_struc_member(id,"code",	0,	0x000400,	-1,	8);
	mid = add_struc_member(id,"stageNumber",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"songNumber",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"XPos",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"YPos",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"direction",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"maxHP",	0X1C,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"star",	0X1E,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"HP",	0X20,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"a",	0X22,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"selectedWeapon",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"selectedItem",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"equippedItems",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"unit",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"gameTime",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"weapons",	0X38,	0x60000400,	get_struc_id("Weapon"),	160);
	mid = add_struc_member(id,"inventory",	0XD8,	0x60000400,	get_struc_id("ItemData"),	128);
	mid = add_struc_member(id,"unlockedStages",	0X158,	0x60000400,	get_struc_id("PermitStageStruct"),	64);
	mid = add_struc_member(id,"mapFlagArray",	0X198,	0x000400,	-1,	128);
	mid = add_struc_member(id,"FLAG",	0X218,	0x000400,	-1,	4);
	mid = add_struc_member(id,"eventFlags",	0X21C,	0x000400,	-1,	1000);
	set_struc_align(id,2);
	
	id = get_struc_id("TSCStruct");
	mid = add_struc_member(id,"length",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"buffer",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"offset",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"wait",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"mode",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"start_x",	0X14,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("Illustration");
	mid = add_struc_member(id,"actionNumber",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"XPos",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("TextObject");
	mid = add_struc_member(id,"flag",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"x",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"y",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"cast",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"string",	0X10,	0x000400,	-1,	64);
	set_struc_align(id,2);
	
	id = get_struc_id("Position");
	mid = add_struc_member(id,"X",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Y",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("Bullet");
	mid = add_struc_member(id,"isUsed",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"bulletID",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"flags",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"isAlive",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"XPos",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"YPos",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"XVel",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"YVel",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"targetX",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"targetY",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"currentState",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"act_wait",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"frameTimer",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"animationNum",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"direction",	0X38,	0x000400,	-1,	1);
	mid = add_struc_member(id,"displayRect",	0X3C,	0x60000400,	get_struc_id("RECT"),	16);
	mid = add_struc_member(id,"count1",	0X4C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"count2",	0X50,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"maxDistance",	0X54,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"damage",	0X58,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"numberImpacts",	0X5C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"sizeWidth",	0X60,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"sizeHeight",	0X64,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"collisionX",	0X68,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"collisionY",	0X6C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"view",	0X70,	0x60000400,	get_struc_id("NPCCollisionFlags"),	16);
	set_struc_align(id,2);
	
	id = get_struc_id("DSBUFFERDESC");
	mid = add_struc_member(id,"dwSize",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwFlags",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwBufferBytes",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwReserved",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"lpwfxFormat",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("OCTWAVE");
	mid = add_struc_member(id,"wave_size",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"oct_par",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"oct_size",	0X4,	0x10000400,	-1,	2);
	set_struc_align(id,1);
	
	id = get_struc_id("IDirectSoundBufferVtbl");
	mid = add_struc_member(id,"QueryInterface",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"AddRef",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Release",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetCaps",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetCurrentPosition",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetFormat",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetVolume",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetPan",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetFrequency",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetStatus",	0X24,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Initialize",	0X28,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Lock",	0X2C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Play",	0X30,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetCurrentPosition",	0X34,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetFormat",	0X38,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetVolume",	0X3C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetPan",	0X40,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetFrequency",	0X44,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Stop",	0X48,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Unlock",	0X4C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Restore",	0X50,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("IDirectSoundBuffer");
	mid = add_struc_member(id,"lpVtbl",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("IDirectSound");
	mid = add_struc_member(id,"lpVtbl",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("IDirectSoundVtbl");
	mid = add_struc_member(id,"QueryInterface",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"AddRef",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Release",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"CreateSoundBuffer",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetCaps",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"DuplicateSoundBuffer",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetCooperativeLevel",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Compact",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetSpeakerConfig",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetSpeakerConfig",	0X24,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Initialize",	0X28,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("TRACKDATA");
	mid = add_struc_member(id,"freq",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wave_no",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"pipi",	0X3,	0x000400,	-1,	1);
	mid = add_struc_member(id,"note_p",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"note_list",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("MUSICINFO");
	mid = add_struc_member(id,"wait",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"line",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"dot",	0X3,	0x000400,	-1,	1);
	mid = add_struc_member(id,"alloc_note",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"repeat_x",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"end_x",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tdata",	0X10,	0x60000400,	get_struc_id("TRACKDATA"),	192);
	set_struc_align(id,2);
	
	id = get_struc_id("OrgData");
	mid = add_struc_member(id,"info",	0,	0x60000400,	get_struc_id("MUSICINFO"),	208);
	mid = add_struc_member(id,"track",	0XD0,	0x000400,	-1,	1);
	set_struc_align(id,2);
	
	id = get_struc_id("NOTELIST");
	mid = add_struc_member(id,"from",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"to",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"position",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"length",	0XC,	0x000400,	-1,	1);
	mid = add_struc_member(id,"y",	0XD,	0x000400,	-1,	1);
	mid = add_struc_member(id,"volume",	0XE,	0x000400,	-1,	1);
	mid = add_struc_member(id,"pan",	0XF,	0x000400,	-1,	1);
	set_struc_align(id,2);
	
	id = get_struc_id("TRACKDATA_file");
	mid = add_struc_member(id,"freq",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wave_no",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"pipi",	0X3,	0x000400,	-1,	1);
	mid = add_struc_member(id,"note_num",	0X4,	0x10000400,	-1,	2);
	set_struc_align(id,1);
	
	id = get_struc_id("MUSICINFO_file");
	mid = add_struc_member(id,"wait",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"line",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"dot",	0X3,	0x000400,	-1,	1);
	mid = add_struc_member(id,"repeat_x",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"end_x",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tdata",	0XC,	0x60000400,	get_struc_id("TRACKDATA_file"),	96);
	set_struc_align(id,2);
	
	id = get_struc_id("IDirectDrawVtbl");
	mid = add_struc_member(id,"QueryInterface",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"AddRef",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Release",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Compact",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"CreateClipper",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"CreatePalette",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"CreateSurface",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"DuplicateSurface",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"EnumDisplayModes",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"EnumSurfaces",	0X24,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"FlipToGDISurface",	0X28,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetCaps",	0X2C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetDisplayMode",	0X30,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetFourCCCodes",	0X34,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetGDISurface",	0X38,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetMonitorFrequency",	0X3C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetScanLine",	0X40,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetVerticalBlankStatus",	0X44,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Initialize",	0X48,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"RestoreDisplayMode",	0X4C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetCooperativeLevel",	0X50,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetDisplayMode",	0X54,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"WaitForVerticalBlank",	0X58,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("IDirectDrawSurface");
	mid = add_struc_member(id,"lpVtbl",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("IDirectDrawSurfaceVtbl");
	mid = add_struc_member(id,"QueryInterface",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"AddRef",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Release",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"AddAttachedSurface",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"AddOverlayDirtyRect",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Blt",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"BltBatch",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"BltFast",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"DeleteAttachedSurface",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"EnumAttachedSurfaces",	0X24,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"EnumOverlayZOrders",	0X28,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Flip",	0X2C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetAttachedSurface",	0X30,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetBltStatus",	0X34,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetCaps",	0X38,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetClipper",	0X3C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetColorKey",	0X40,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetDC",	0X44,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetFlipStatus",	0X48,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetOverlayPosition",	0X4C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetPalette",	0X50,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetPixelFormat",	0X54,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetSurfaceDesc",	0X58,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Initialize",	0X5C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"IsLost",	0X60,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Lock",	0X64,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ReleaseDC",	0X68,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Restore",	0X6C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetClipper",	0X70,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetColorKey",	0X74,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetOverlayPosition",	0X78,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetPalette",	0X7C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Unlock",	0X80,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"UpdateOverlay",	0X84,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"UpdateOverlayDisplay",	0X88,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"UpdateOverlayZOrder",	0X8C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("_DDSURFACEDESC::$091DBF7D405BE25E65B16620C008128B");
	mid = add_struc_member(id,"lPitch",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwLinearSize",	0,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("_DDSURFACEDESC::$9AB659F8D6A45F8C7834A76B9C40973B");
	mid = add_struc_member(id,"dwMipMapCount",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwZBufferBitDepth",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwRefreshRate",	0,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("DDCOLORKEY");
	mid = add_struc_member(id,"dwColorSpaceLowValue",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwColorSpaceHighValue",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("_DDPIXELFORMAT::$10AA641B3215541DB69A48A361AE0013");
	mid = add_struc_member(id,"dwRGBBitCount",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwYUVBitCount",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwZBufferBitDepth",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwAlphaBitDepth",	0,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("_DDPIXELFORMAT::$0E0BD8DB15B3F2A790C062F781315157");
	mid = add_struc_member(id,"dwRBitMask",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwYBitMask",	0,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("_DDPIXELFORMAT::$DB4BDA43012B420E1DC9AEEACAA267A5");
	mid = add_struc_member(id,"dwGBitMask",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwUBitMask",	0,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("_DDPIXELFORMAT::$4C5EBD389D88C4C046794501FFF390F4");
	mid = add_struc_member(id,"dwBBitMask",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwVBitMask",	0,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("_DDPIXELFORMAT::$3ED4EC923A768B2489A9D1155BD11968");
	mid = add_struc_member(id,"dwRGBAlphaBitMask",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwYUVAlphaBitMask",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwRGBZBitMask",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwYUVZBitMask",	0,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("DDPIXELFORMAT");
	mid = add_struc_member(id,"dwSize",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwFlags",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwFourCC",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"anonymous_0",	0XC,	0x60000400,	get_struc_id("_DDPIXELFORMAT::$10AA641B3215541DB69A48A361AE0013"),	4);
	mid = add_struc_member(id,"anonymous_1",	0X10,	0x60000400,	get_struc_id("_DDPIXELFORMAT::$0E0BD8DB15B3F2A790C062F781315157"),	4);
	mid = add_struc_member(id,"anonymous_2",	0X14,	0x60000400,	get_struc_id("_DDPIXELFORMAT::$DB4BDA43012B420E1DC9AEEACAA267A5"),	4);
	mid = add_struc_member(id,"anonymous_3",	0X18,	0x60000400,	get_struc_id("_DDPIXELFORMAT::$4C5EBD389D88C4C046794501FFF390F4"),	4);
	mid = add_struc_member(id,"anonymous_4",	0X1C,	0x60000400,	get_struc_id("_DDPIXELFORMAT::$3ED4EC923A768B2489A9D1155BD11968"),	4);
	set_struc_align(id,2);
	
	id = get_struc_id("DDSCAPS");
	mid = add_struc_member(id,"dwCaps",	0,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("DDSURFACEDESC");
	mid = add_struc_member(id,"dwSize",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwFlags",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwHeight",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwWidth",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"anonymous_0",	0X10,	0x60000400,	get_struc_id("_DDSURFACEDESC::$091DBF7D405BE25E65B16620C008128B"),	4);
	mid = add_struc_member(id,"dwBackBufferCount",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"anonymous_1",	0X18,	0x60000400,	get_struc_id("_DDSURFACEDESC::$9AB659F8D6A45F8C7834A76B9C40973B"),	4);
	mid = add_struc_member(id,"dwAlphaBitDepth",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwReserved",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"lpSurface",	0X24,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ddckCKDestOverlay",	0X28,	0x60000400,	get_struc_id("DDCOLORKEY"),	8);
	mid = add_struc_member(id,"ddckCKDestBlt",	0X30,	0x60000400,	get_struc_id("DDCOLORKEY"),	8);
	mid = add_struc_member(id,"ddckCKSrcOverlay",	0X38,	0x60000400,	get_struc_id("DDCOLORKEY"),	8);
	mid = add_struc_member(id,"ddckCKSrcBlt",	0X40,	0x60000400,	get_struc_id("DDCOLORKEY"),	8);
	mid = add_struc_member(id,"ddpfPixelFormat",	0X48,	0x60000400,	get_struc_id("DDPIXELFORMAT"),	32);
	mid = add_struc_member(id,"ddsCaps",	0X68,	0x60000400,	get_struc_id("DDSCAPS"),	4);
	set_struc_align(id,2);
	
	id = get_struc_id("IDirectInputA");
	mid = add_struc_member(id,"lpVtbl",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("IDirectInputAVtbl");
	mid = add_struc_member(id,"QueryInterface",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"AddRef",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Release",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"CreateDevice",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"EnumDevices",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetDeviceStatus",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"RunControlPanel",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Initialize",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("IDirectDrawClipper");
	mid = add_struc_member(id,"lpVtbl",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("IDirectDrawClipperVtbl");
	mid = add_struc_member(id,"QueryInterface",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"AddRef",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Release",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetClipList",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetHWnd",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Initialize",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"IsClipListChanged",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetClipList",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetHWnd",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("WeaponData");
	mid = add_struc_member(id,"damage",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"numberImpacts",	0X1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"filler",	0X2,	0xb0000500,	-1,	2);
	mid = add_struc_member(id,"maxDistance",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"flags",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"sizeWidth",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"sizeHeight",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"collisionX",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"collisionY",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"collisionFlags",	0X1C,	0x60000400,	get_struc_id("NPCCollisionFlags"),	16);
	set_struc_align(id,2);
	
	id = get_struc_id("effectData");
	mid = add_struc_member(id,"viewLeft",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"viewTop",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("_DDBLTFX::$EA6EC20695B0AA8ECF92A441DE55A935");
	mid = add_struc_member(id,"dwZDestConst",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"lpDDSZBufferDest",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("_DDBLTFX::$702C52B3655764E63C007A6B73D01C19");
	mid = add_struc_member(id,"dwZSrcConst",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"lpDDSZBufferSrc",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("_DDBLTFX::$3639C047B3E88B857708792B1F3FEC83");
	mid = add_struc_member(id,"dwAlphaDestConst",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"lpDDSAlphaDest",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("_DDBLTFX::$C0828DA952883A43DEF8D462ACC90C87");
	mid = add_struc_member(id,"dwAlphaSrcConst",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"lpDDSAlphaSrc",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("_DDBLTFX::$4C109671A06E28B8127C40041AB5795C");
	mid = add_struc_member(id,"dwFillColor",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwFillDepth",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwFillPixel",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"lpDDSPattern",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("DDBLTFX");
	mid = add_struc_member(id,"dwSize",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwDDFX",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwROP",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwDDROP",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwRotationAngle",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwZBufferOpCode",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwZBufferLow",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwZBufferHigh",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwZBufferBaseDest",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwZDestConstBitDepth",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"anonymous_0",	0X28,	0x60000400,	get_struc_id("_DDBLTFX::$EA6EC20695B0AA8ECF92A441DE55A935"),	4);
	mid = add_struc_member(id,"dwZSrcConstBitDepth",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"anonymous_1",	0X30,	0x60000400,	get_struc_id("_DDBLTFX::$702C52B3655764E63C007A6B73D01C19"),	4);
	mid = add_struc_member(id,"dwAlphaEdgeBlendBitDepth",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwAlphaEdgeBlend",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwReserved",	0X3C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwAlphaDestConstBitDepth",	0X40,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"anonymous_2",	0X44,	0x60000400,	get_struc_id("_DDBLTFX::$3639C047B3E88B857708792B1F3FEC83"),	4);
	mid = add_struc_member(id,"dwAlphaSrcConstBitDepth",	0X48,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"anonymous_3",	0X4C,	0x60000400,	get_struc_id("_DDBLTFX::$C0828DA952883A43DEF8D462ACC90C87"),	4);
	mid = add_struc_member(id,"anonymous_4",	0X50,	0x60000400,	get_struc_id("_DDBLTFX::$4C109671A06E28B8127C40041AB5795C"),	4);
	mid = add_struc_member(id,"ddckDestColorkey",	0X54,	0x60000400,	get_struc_id("DDCOLORKEY"),	8);
	mid = add_struc_member(id,"ddckSrcColorkey",	0X5C,	0x60000400,	get_struc_id("DDCOLORKEY"),	8);
	set_struc_align(id,2);
	return id;
}

//------------------------------------------------------------------------
// Information about structure types

static Structures(void) {
        auto id;
        begin_type_updating(UTP_STRUCT);
	id = Structures_0(id);
        end_type_updating(UTP_STRUCT);
}

// End of file.
